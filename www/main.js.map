{"version":3,"file":"main.js","mappings":"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CAACkiB,qBAAJ,GAA4B1B,uFAA5B;AACAxgB,GAAG,GAAG2f,UAAU,CAAC,CAACxU,yDAAU,EAAX,CAAD,EAAiBnL,GAAjB,CAAhB;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/class/-global-error-handler.ts","./src/app/class/ServerErrorInterceptor/server-error-interceptor.ts","./src/app/common/global-constants.ts","./src/app/modules/sharedModule/shared-module/shared-module.module.ts","./src/app/pipes/distancePipe/distance-pipe.pipe.ts","./src/app/pipes/timepipe/time.pipe.ts","./src/app/services/ErrorLogging/errorlogging.service.ts","./src/app/services/NotificationService/notification.service.ts","./src/app/services/alertControl/alert-control.service.ts","./src/app/services/app-config.ts","./src/app/services/bluetoothLE/bluetooth-le.service.ts","./src/app/services/errorService/error.service.ts","./src/app/services/events/events.service.ts","./src/app/services/logging/logging.service.ts","./src/app/services/outputController/output-controller.service.ts","./src/app/services/rest-api/rest-api.service.ts","./src/app/services/signaling/signaling.service.ts","./src/app/services/storage/storage.service.ts","./src/app/services/transferdata/transfer.service.ts","./src/environments/environment.ts","./src/main.ts","./plugins/cordova-plugin-fcm-with-dependecy-updated/ionic/ngx/FCM.js","./node_modules/@ionic/core/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { PreloadAllModules, RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"landing\",\n    pathMatch: \"full\",\n  }, \n  {\n    path: \"home\",\n    loadChildren: () =>\n      import(\"./pages/home/home.module\").then((m) => m.HomePageModule),\n  },\n  {\n    path: \"trip\",\n    loadChildren: () =>\n      import(\"./pages/trips/trips.module\").then((m) => m.TripsPageModule),\n  },\n  {\n    path: \"tripproposals\",\n    loadChildren: () =>\n      import(\"./pages/tripproposals/tripproposals.module\").then(\n        (m) => m.TripproposalsPageModule\n      ),\n  },\n  {\n    path: 'landing',\n    loadChildren: () => import('./pages/landing-page/landing-page.module').then( m => m.LandingPagePageModule)\n  },\n \n  \n \n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\n//import { AndroidPermissionResponse, AndroidPermissionsOriginal } from '@awesome-cordova-plugins/android-permissions';\nimport { Geolocation } from \"@awesome-cordova-plugins/geolocation/ngx\";\n\nimport { SplashScreen } from \"@awesome-cordova-plugins/splash-screen/ngx\";\nimport {\n  AlertController,\n  Platform,\n  ToastController,\n  NavController,\n} from \"@ionic/angular\";\nimport { AppConfig } from \"./services/app-config\";\nimport { Events } from \"./services/events/events.service\";\nimport { RestApiService } from \"./services/rest-api/rest-api.service\";\nimport { Network } from \"@awesome-cordova-plugins/network/ngx\";\nimport { OpenNativeSettings } from \"@awesome-cordova-plugins/open-native-settings/ngx\";\nimport { StatusBar } from \"@awesome-cordova-plugins/status-bar/ngx\";\nimport { AndroidPermissions } from \"@ionic-native/android-permissions\";\nimport * as uuid from \"uuid\";\nimport { File } from \"@awesome-cordova-plugins/file/ngx\";\nimport { Geofence } from \"@ionic-native/geofence\";\nimport { BluetoothLEService } from \"./services/bluetoothLE/bluetooth-le.service\";\n// import { BluetoothSerialService } from \"./services/bluetoothSerial/bluetooth-serial.service\";\nimport { AppCenterAnalytics } from \"@awesome-cordova-plugins/app-center-analytics/ngx\";\nimport { AppCenterCrashes } from \"@ionic-native/app-center-crashes\";\nimport { CodePush } from \"@awesome-cordova-plugins/code-push/ngx\";\nimport { StorageService } from \"./services/storage/storage.service\";\nimport { TransferService } from \"./services/transferdata/transfer.service\";\nimport { Diagnostic } from \"@awesome-cordova-plugins/diagnostic/ngx\";\nimport { Router } from \"@angular/router\";\nimport { FCM } from \"plugins/cordova-plugin-fcm-with-dependecy-updated/ionic/ngx/FCM\";\nimport { resolve } from \"dns\";\nimport { PostUserResponse } from \"./interface/post-user-response\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { Logger } from \"@obsidize/rx-console\";\nimport { LoggingService } from \"./services/logging/logging.service\";\n\n\ndeclare var NativeLogs: any;\ndeclare var GooglePlayServicesChecker: any;\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n  styleUrls: [\"app.component.scss\"],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  public appPages = [\n    { title: \"Home\", url: \"/home\", icon: \"home\" },\n\n  ];\n\n  rootPage: any = \"HomePage\";\n  public logg: any;\n\n  pages: Array<{ title: string; component: any }>;\n  dir = \"file:///storage/emulated/0\";\n  filename = new Date().toISOString().substring(0, 19) + \".log\";\n  fileEvent = new Date().toISOString().substring(0, 19) + \".event\";\n  filelog = new Date().toISOString().substring(0, 19) + \".fullog\";\n  mmir;\n  logText;\n  disconnectSubscription;\n  connectSubscription;\n  check = \"1\";\n  alert;\n  toasts = [];\n  id: string = uuid();\n  userID;\n\n\n  public fcm_message_broker = new BehaviorSubject<any>('undefined');\n  _fcm_observer = this.fcm_message_broker.asObservable();\n\n// to get the app offline or disconnected to the server \n// used for local feature testing with local stored values\n  offline: boolean = false;\n\n  // app center analytics\n  success2 = function (result) {\n    console.log(\"analytics \" + result ? \"enabled\" : \"disabled\");\n  };\n\n  error2 = function (error) {\n    console.error(error);\n  };\n\n  success = function () {\n    console.log(\"APP_CENTER Event tracked\");\n  };\n\n  error = function (error) {\n    console.error(\"App center\", error);\n  };\n\n  // FCM related variables \n\n  hasPermission: boolean;\n  token: string;\n  // pushPayload: import(\"/Users/dfki_krutarth/opensourcelabmobilityapp/plugins/cordova-plugin-fcm-with-dependecy-updated/typings/INotificationPayload\").INotificationPayload;\n\n private  logger = new Logger('Main app component')\n\n  constructor(\n    public navCtrl: NavController,\n    public geolocation: Geolocation,\n    public platform: Platform,\n    public statusBar: StatusBar,\n    public splashScreen: SplashScreen,\n    public events: Events,\n    public appConfig: AppConfig,\n    private androidPermissions: AndroidPermissions,\n    private file: File,\n    private network: Network,\n    public alertCtrl: AlertController,\n    private toastCtrl: ToastController,\n    public restProvider: RestApiService,\n    private openNativeSettings: OpenNativeSettings,\n    private bluetooth: BluetoothLEService,\n    public appCenterAnalytics: AppCenterAnalytics,\n    public AppCenterCrashes: AppCenterCrashes,\n    private codePush: CodePush,\n    private transfer: TransferService,\n    private storage: StorageService,\n    private diagnostic: Diagnostic,\n    private fcm: FCM,\n    private logging : LoggingService\n  ) {\n\n    // ---------------\n    console.log(\"----------------------APP---main----------------\");\n\n    \n    \n    console.log(\"in app constructor\");\n    \n\n    this.logText =\n      new Date().toISOString().substring(11, 19) + \" Event Log Started \\r\\n\";\n    console.log(\"this.filename\", this.filename)\n    this.filelog = this.filelog.replace(/[:]/gi, \"-\");\n    this.filename = this.filename.replace(/[:]/gi, \"-\");\n    console.log(\"this.fileneame\", this.filename)\n    this.fileEvent = this.fileEvent.replace(/[:]/gi, \"-\");\n\n    this.pages = [{ title: \"Home\", component: \"HomePage\" }];\n    if (this.platform.is(\"android\")) {\n      this.platform.ready().then(() => {\n        \n        var success = function (installedAndUpdated) {\n          console.log(installedAndUpdated);\n          if (installedAndUpdated.status) {\n            console.log(\"Google Play Services is installed and updated\");\n          } else {\n            console.log(\"Showing user native update window\");\n            this.generateToast(\n              \"Please update your google play services for geofence to work properly\"\n            );\n          }\n        };\n        var failure = function (reason) {\n          console.error(\"error: \" + reason);\n        };\n        GooglePlayServicesChecker.check(success, failure);\n\n        this.AppCenterCrashes.isEnabled().then(\n          (success) => {\n            console.log(\"crash reporting is enable: \", success);\n            this.AppCenterCrashes.hasCrashedInLastSession().then(\n              (val) => {\n                console.log(\"App crash reported in last session\", val);\n                if (val) {\n                  this.AppCenterCrashes.lastSessionCrashReport().then(\n                    (report) => {\n                      console.log(\"Crash report from last session\", report);\n                    }\n                  );\n                }\n              },\n              (err) => {\n                console.log(\"crash reporting is not enabled\");\n                console.log(\"error getting last crash report\", err);\n              }\n            );\n          },\n          (err) => {\n            console.log(\"problem setting crash report service\", err);\n          }\n        );\n\n        // this.runLogging();\n        // for app analytics\n        this.appCenterAnalytics\n          .trackEvent(\"Video clicked\", {\n            Category: \"Music\",\n            FileName: \"favorite.avi\",\n          })\n          .then(this.success, this.error);\n        this.appCenterAnalytics.isEnabled().then(this.success2, this.error2);\n\n        console.log(\"deviceID\", this.id);\n        // as the app starts, initiating the file creation for the javalog\n        this.writeLogs();\n        console.log(\"app component file\", this.file.externalApplicationStorageDirectory, this.filelog)\n\n        this.platform.backButton.subscribeWithPriority(\n          10,\n          (processNextHandler) => {\n            console.log(\"backbutton reported from appmodue ts\");\n\n            processNextHandler();\n          }\n        );\n        //create the log files\n        this.file\n          .writeFile(\n            this.file.externalApplicationStorageDirectory,\n            this.filelog,\n            \"\",\n            { replace: true }\n          )\n          .then(\n            (succ) => {},\n            (error) => {\n              console.log(\"error writing file \", error);\n            }\n          );\n        this.file\n          .writeFile(\n            this.file.externalApplicationStorageDirectory,\n            this.filename,\n            this.logText,\n            { replace: true }\n          )\n          .then(\n            (succ) => {},\n            (error) => {\n              console.log(\"error writing file \", error);\n            }\n          );\n        this.file\n          .writeFile(\n            this.file.externalApplicationStorageDirectory,\n            this.fileEvent,\n            \"\",\n            { replace: true }\n          )\n          .then(\n            (succ) => {},\n            (error) => {\n              console.log(\"error writing file \", error);\n            }\n          );\n      \n      });\n    }\n  }\n\n\n  private async runLogging() {\n    console.log(\"runing login service manager\");\n    await this.platform.ready();\n    this.logger.debug(\"runtimelogging\")\n    await this.logging.initialize()\n    \n  }\n\n  ngOnInit() {\n    this.initializeApp();\n  }\n  \n\n  ngOnDestroy() {\n    console.log(\"destroy called for app componet page \");\n  }\n\n  checkCodePush() {\n    console.log(\"initializing code push check \");\n    this.codePush\n      .sync()\n      .subscribe((syncStatus) => console.log(\"code push sync\", syncStatus));\n\n    const downloadProgress = (progress) => {\n      console.log(\n        `Downloaded ${progress.receivedBytes} of ${progress.totalBytes}`\n      );\n    };\n    this.codePush\n      .sync({}, downloadProgress)\n      .subscribe((syncStatus) =>\n        console.log(\"check for new packages available \", syncStatus)\n      );\n  }\n  async checkLocationAccuracy() {\n    console.log(\"check location accuracy\");\n    this.diagnostic.isGpsLocationAvailable().then((res) => {\n      console.log(\"gpsenables or not \", res);\n    });\n\n    await this.diagnostic.isGpsLocationEnabled().then(async (succ) => {\n      console.log(\"---------------is gps enabled \", succ);\n      if (!succ) {\n        this.diagnostic.registerLocationStateChangeHandler((res) => {\n          console.log(\" change in state of location \", res);\n          // window.location.reload()\n        });\n\n        let alert = this.alertCtrl.create({\n          header: \"Require Permission\",\n          message: \"Please enable Location services\",\n          buttons: [\n            {\n              text: \"Settings\",\n              handler: async () => {\n                await this.diagnostic.switchToLocationSettings();\n              },\n            },\n          ],\n        });\n        (await alert).present();\n        console.log(\"location settings open from checklocation accuracy\");\n      }\n    });\n    await this.diagnostic.getLocationAuthorizationStatus().then(async (suc) => {\n      if (suc == \"GRANTED\") {\n        console.log(\"getLocationAuthorizationStatuses() \", suc);\n        this.generateToast(\"GPS check and accuracy done \");\n      } else {\n        console.log(\"getLocationAuthorizationStatuses() \", suc);\n        let alert = this.alertCtrl.create({\n          header: \"Require Permission\",\n          message: \"Please allow use location permission 'allow all time' \",\n          buttons: [\n            {\n              text: \"Settings\",\n              handler: async () => {\n                await this.diagnostic\n                  .requestLocationAuthorization(\"when_in_use\")\n                  .then(async (suc) => {\n                    console.log(\"requestLocationAuthorization()\", suc);\n                    setTimeout(async () => {\n                      await this.diagnostic\n                        .requestLocationAuthorization(\"always\")\n                        .then((succ2) => {\n                          console.log(\"requestLocationAuthorization\", succ2);\n                          window.location.reload();\n                        });\n                    }, 1000);\n                  });\n              },\n            },\n          ],\n        });\n        (await alert).present();\n      }\n    });\n  }\n  private async setupFCM() {\n    console.log(\"__________FCM settings_________\");\n\n    \n    await this.platform.ready();\n    console.log('FCM setup started');\n    if (!this.platform.is('cordova')) {\n      return;\n    }\n\n    console.log('Subscribing to token updates');\n    \n\n    this.token = await this.fcm.getToken();\n\n    console.log('getToken result: ', this.token);\n\n    let notification = await this.fcm.onNotification().subscribe((data) => {\n      console.log(\"FCM data\", data)\n      this.fcm_message_broker.next(data);\n    })\n\n    // resolve(this.token)\n    return Promise.resolve(this.token)\n  }\n\n  generateToast(msg, color?, duration?) {\n    const toast = {\n      message: msg,\n      color: color || \"dark\",\n      duration: duration || 1000,\n    };\n    this.toasts.push(toast);\n    const timeout = (this.toasts.length - 1) * toast.duration;\n    this.show(timeout);\n  }\n  show(timeout) {\n    setTimeout(\n      async () => {\n        const toast = await this.toastCtrl.create(this.toasts[0]);\n        await toast.present();\n        this.toasts.splice(0, 1);\n      },\n      timeout > 0 ? timeout + 800 : 0\n    );\n  }\n\n  //function to write log\n  writeLogs() {\n    let __this: AppComponent = this;\n    NativeLogs.getLog(1000, true, function (_logs) {\n      __this.logg = _logs;\n    });\n\n    setTimeout(() => {\n      this.file\n        .writeFile(\n          this.file.externalApplicationStorageDirectory,\n          this.filelog,\n          this.logg,\n          { append: true }\n        )\n        .then(\n          (suc) => {},\n          (err) => {}\n        );\n\n      // this.file.writeFile(this.dir, this.filename,\n      //   this.logg, {replace: true}).catch((error) => {\n      //     console.log(error)\n      //   })\n    });\n  }\n\n\n\n  initializeApp() {\n    console.log(\"initializing app\");\n    if (this.platform.is(\"android\")) {\n      this.platform\n        .ready()\n        .then(async () => {\n         \n          this.statusBar.backgroundColorByName(\"orange\");\n          this.splashScreen.hide();\n          /* await this.checkInternet().then(async () => {\n            if (this.network.type !== \"none\") {\n            }\n          }); */\n       \n        })\n        .catch((error) => {\n          console.log(\"platform not ready to be used\", error);\n          this.logText =\n            this.logText +\n            new Date().toISOString().substring(11, 19) +\n            \" \" +\n            error +\n            \"\\r\\n\";\n          this.generateToast(\"ERROR!\", error);\n        });\n    }\n    // to generate a userId\n    \n    if (!this.offline) {\n      console.log(\"device is :\" ,this.id);\n      this.setupFCM().then((value) => {\n        if (!value) {\n          console.error(\"FCM token does not exist\")\n        }\n        // for web app to run \n        /* if (!this.platform.is(\"android\")) {\n          this.token = \"c3a5NJkQTJSaC4OeNRA_cX:APA91bHW2ooM5yOivEN8YW_x-DML5rQEro6wVv0fxeM5q6oJaPoQe_E_9d3gpByC6_-GRJb_Lt7GQu5SfYAv659_1MIaW4a9tXYVgPVdMXPxVD-aFKCldEq0nPDASsgewaijbt71MV2b\"\n        } */\n        this.restProvider\n      .getUserIdentifier(this.id, this.token)\n          .then(async (value: PostUserResponse) => {\n            this.userID = value[\"user_id\"];\n            console.log(\"userID:\",this.userID)\n        await this.userID;\n      })\n      .catch((error) => {\n        console.log(\"server cannot process API request\",error);\n        this.generateToast(\"Sorry!, The server is down. \", \"black\", 30000);\n      });\n\n      }, (error) => {\n        console.error(\"FCM error\", error)\n      })\n      \n\n  \n}\n    \n  }\n  connection: \"offline\" | \"online\";\n  checkInternet(): Promise<void> {\n    return new Promise(async (resolve) => {\n      console.log(\"network type\", this.network.type);\n      let connect1sub;\n      let disconnect1sub;\n\n      //  initiating checknetwork plugin\n      if (this.network.type == \"none\") {\n        this.connection= \"offline\"\n        // this.alertConnection(\"connection lost\");\n        connect1sub = await this.network.onConnect().subscribe((succ) => {\n          console.log(\"network connected!\", succ);\n          console.log(\"network type\", this.network.type);\n          // We just got a connection but we need to wait briefly\n          // before we determine the connection type. Might need to wait.\n          // prior to doing any api requests as well.\n          setTimeout(() => {\n            // window.location.reload();\n            if (this.network.type !== \"none\") {\n              console.log(\"we got a connection, woohoo!\");\n              this.alertConnection(\"connected\");\n              // window.location.reload();\n              this.connection = \"online\";\n              this.generateToast(\"You are online\");\n            }\n          }, 1000);\n        });\n      } else {\n        this.generateToast(\"you are online\");\n        this.connection=\"online\"\n        console.error(\"Error type \", this.network.type)\n        \n        disconnect1sub = this.network.onDisconnect().subscribe(() => {\n          console.log(\"network was disconnected :-(\");\n          this.alertConnection(\"connection lost\");\n          this.connection= \"offline\"\n        });\n      }\n      await resolve();\n    });\n  }\n\n  //Check if application having GPS access permission\n  /**\n   * @deprecated\n   */\n  checkGPSPermission() {\n    this.androidPermissions\n      .checkPermission(\"android.permission.ACCESS_BACKGROUND_LOCATION\")\n      .then(\n        (result) => {\n          console.log(\"Permission result \", result);\n\n        },\n        (err) => {\n          this.checkLocationAccuracy();\n          alert(err);\n          // log error in file in case of error\n          this.logText =\n            this.logText +\n            new Date().toISOString().substring(11, 19) +\n            \" CheckGPS Plugin: \" +\n            err +\n            \"\\r\\n\";\n        }\n      );\n  }\n\n  requestGPSPermission() {\n    //Show 'GPS Permission Request' dialogue\n    console.log(\"request gps permission \");\n    this.androidPermissions\n      .requestPermissions([\n        this.androidPermissions.PERMISSION.READ_PHONE_STATE,\n        this.androidPermissions.PERMISSION.ACCESS_BACKGROUND_LOCATION,\n        this.androidPermissions.PERMISSION.ACCESS_COARSE_LOCATION,\n        this.androidPermissions.PERMISSION.ACCESS_FINE_LOCATION,\n        this.androidPermissions.PERMISSION.ACTIVITY_RECOGNITION,\n        this.androidPermissions.PERMISSION.FOREGROUND_SERVICE,\n        this.androidPermissions.PERMISSION.LOCATION_HARDWARE,\n      ])\n      .then(\n        (success) => {\n          console.log(\"success\", success);\n          // call method to turn on GPS\n          // this.askToTurnOnGPS();\n        },\n        (error) => {\n          this.splashScreen.show();\n          window.location.reload();\n          //Show alert if user click on 'No Thanks'\n          //   alert('requestPermission Error requesting location permissions ' + error)\n          console.log(\n            \"requestPermission Error requesting location permissions \" + error\n          );\n          this.logText =\n            this.logText +\n            new Date().toISOString().substring(11, 19) +\n            \" Request location permissions \" +\n            error +\n            \"\\r\\n\";\n        }\n      );\n  }\n\n  reload() {\n    this.splashScreen.hide();\n    window.location.reload();\n  }\n\n  // alert triggered when connection interupted\n  async alertConnection(note) {\n    let connection_alert;\n\n    if (note == \"connection lost\") {\n      console.log(\"No internet connection available\");\n\n      connection_alert = this.alertCtrl.create({\n        header: \"Internet warning !!\",\n        subHeader: \"Please check your internet connection and try again\",\n        buttons: [\n          {\n            text: \"Go to settings\",\n            handler: () => {\n              this.openNativeSettings.open(\"wireless\");\n            },\n          },\n          {\n            text: \"Exit app\",\n            handler: () => {\n              navigator[\"app\"].exitApp();\n            },\n          },\n        ],\n      });\n      (await connection_alert).present();\n      setTimeout(async () => {\n        // connection_alert.dismiss()\n      }, 5000);\n    } else if (note == \"connected\") {\n      if (connection_alert) {\n        console.log(\"alert id\", connection_alert);\n        console.log(\"alert found -------now dismissing\");\n        connection_alert.dismiss();\n      }\n     \n    }\n  }\n  // toast when back online\n  async toastConnect() {\n    console.log(\"toast contrller back online\");\n    let toast = await this.toastCtrl.create({\n      message: \"Connected\",\n      duration: 3000,\n      animated: true,\n    });\n    await toast.present();\n    const { role } = await toast.onDidDismiss();\n    console.log(\"app componnet toast on did dismiss\", role);\n  }\n}\n","import { ErrorHandler, NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { RouteReuseStrategy } from \"@angular/router\";\n\nimport { SplashScreen } from \"@awesome-cordova-plugins/splash-screen/ngx\";\n//import {Statusbar} from '@ionic-native/status-bar';\nimport {\n  IonicModule,\n  IonicRouteStrategy,\n  NavController,\n  NavParams,\n  ActionSheetController,\n  AnimationController\n} from \"@ionic/angular\";\n\n//import { AppComponent } from './app.component';\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport {\n  HttpClient,\n  HttpClientModule,\n  HTTP_INTERCEPTORS,\n} from \"@angular/common/http\";\nimport { RestApiService } from \"./services/rest-api/rest-api.service\";\nimport { SignalingService } from \"./services/signaling/signaling.service\";\n//import { HomePage } from './pages/home/home.page';\nimport { DeviceOrientation } from \"@awesome-cordova-plugins/device-orientation/ngx\";\nimport { Geolocation } from \"@awesome-cordova-plugins/geolocation/ngx\";\nimport { File } from \"@awesome-cordova-plugins/file/ngx\";\nimport { Geofence } from \"@ionic-native/geofence\";\nimport { FormsModule } from \"@angular/forms\";\nimport { Events } from \"./services/events/events.service\";\nimport { Vibration } from \"@awesome-cordova-plugins/vibration/ngx\";\nimport { AndroidPermissions } from \"@ionic-native/android-permissions\";\nimport { SocialSharing } from \"@awesome-cordova-plugins/social-sharing/ngx\";\nimport { OpenNativeSettings } from \"@awesome-cordova-plugins/open-native-settings/ngx\";\nimport { Network } from \"@awesome-cordova-plugins/network/ngx\";\nimport { StatusBar } from \"@awesome-cordova-plugins/status-bar/ngx\";\nimport { TripproposalsPage } from \"./pages/tripproposals/tripproposals.page\";\n//import { TripPage } from './pages/trip/trip.page';\nimport { AppConfig } from \"./services/app-config\";\nimport { Storage } from \"@ionic/storage\";\nimport { AppComponent } from \"./app.component\";\nimport { NativeGeocoder } from \"@awesome-cordova-plugins/native-geocoder/ngx\";\n\n//import { MmirProvider, VoiceUIProvider } from './mmir/ng-provider';\nimport { SpeechRecognition } from \"@awesome-cordova-plugins/speech-recognition/ngx\";\nimport { TextToSpeech } from \"@ionic-native/text-to-speech\";\nimport { Diagnostic } from \"@awesome-cordova-plugins/diagnostic/ngx\";\nimport { TransferService } from \"./services/transferdata/transfer.service\";\nimport { BLE } from \"@awesome-cordova-plugins/ble/ngx\";\nimport { BluetoothLEService } from \"./services/bluetoothLE/bluetooth-le.service\";\nimport { ServerErrorInterceptor } from \"./class/ServerErrorInterceptor/server-error-interceptor\";\nimport { GlobalErrorHandler } from \"./class/-global-error-handler\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppCenterAnalytics } from \"@awesome-cordova-plugins/app-center-analytics/ngx\";\nimport { AppCenterCrashes } from \"@ionic-native/app-center-crashes\";\nimport { CodePush } from \"@awesome-cordova-plugins/code-push/ngx\";\nimport { IonicStorageModule } from \"@ionic/storage-angular\";\nimport { StorageService } from \"./services/storage/storage.service\";\nimport { NgxGauge, NgxGaugeModule } from \"ngx-gauge\";\nimport { AlertControlService } from \"./services/alertControl/alert-control.service\";\nimport { OutputControllerService } from \"./services/outputController/output-controller.service\";\nimport { SharedModuleModule } from \"./modules/sharedModule/shared-module/shared-module.module\";\nimport { FCM } from \"plugins/cordova-plugin-fcm-with-dependecy-updated/ionic/ngx/FCM\"\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    OverlayModule,\n    NgxGaugeModule,\n    BrowserAnimationsModule,\n    IonicStorageModule.forRoot(),\n    SharedModuleModule\n  ],\n  providers: [\n    \n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    { provide: ErrorHandler, useClass: GlobalErrorHandler },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ServerErrorInterceptor,\n      multi: true,\n    },\n    Geofence,\n    MatSnackBar,\n    HttpClient,\n    RestApiService,\n    NativeGeocoder,\n    Geolocation,\n    SignalingService,\n    SplashScreen,\n    Geolocation,\n    NavController,\n    NavParams,\n    DeviceOrientation,\n    File,\n    Events,\n    Vibration,\n    SocialSharing,\n    OpenNativeSettings,\n    Network,\n    StatusBar,\n    AndroidPermissions,\n    AppConfig,\n    Storage,\n    SpeechRecognition,\n    TextToSpeech,\n    Diagnostic,\n    TransferService,\n    BLE,\n    BluetoothLEService,\n    AppCenterAnalytics,\n    AppCenterCrashes,\n    CodePush,\n    StorageService,\n    AlertControlService,\n    OutputControllerService,\n    ActionSheetController,\n    NgxGauge,\n    AnimationController,\n    Animation,\n    FCM\n  ],\n  entryComponents: [AppComponent],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpErrorResponse } from \"@angular/common/http\";\nimport { ErrorHandler, Injectable, Injector } from \"@angular/core\";\nimport { ErrorloggingService } from \"../services/ErrorLogging/errorlogging.service\";\nimport { ErrorService } from \"../services/errorService/error.service\";\nimport { NotificationService } from \"../services/NotificationService/notification.service\";\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n  constructor(private injector: Injector) {}\n\n  handleError(error: Error | HttpErrorResponse) {\n    const errorService = this.injector.get(ErrorService);\n    const logger = this.injector.get(ErrorloggingService);\n    const notifier = this.injector.get(NotificationService);\n\n    let message;\n    let stackTrace;\n\n    if (error instanceof HttpErrorResponse) {\n      // Server Error\n      message = errorService.getServerMessage(error);\n      stackTrace = errorService.getServerStack(error);\n      notifier.showError(message);\n    } else {\n      // Client Error\n      message = errorService.getClientMessage(error);\n      stackTrace = errorService.getClientStack(error);\n      notifier.showError(message);\n    }\n\n    // Always log errors\n    logger.logError(message, stackTrace);\n\n    console.error(error);\n  }\n}\n","\n\nimport { Injectable } from '@angular/core';\nimport { \n  HttpEvent, HttpRequest, HttpHandler, \n  HttpInterceptor, HttpErrorResponse \n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n\n@Injectable()\nexport class ServerErrorInterceptor implements HttpInterceptor {\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        return next.handle(request).pipe(\n          retry(1),\n          catchError((error: HttpErrorResponse) => {\n            if (error.status === 401) {\n              // refresh token\n            } else {\n              return throwError(error);\n            }\n          })\n        );    \n      }\n\n\n\n\n}\n","export class GlobalConstants {\n  /**\n   * GLOBAL VARIBALES\n   */\n\n  /**\n   * @{Geofence}\n   */\n  public static checkpoint_radius_inner: number = 10;\n\n  // global varibale for meeting checkpoint radius and id\n  //  50 meter geofence\n  public static meeting_checkppoint_radius_outside: number = 50;\n  public static meeting_checkppoint_id_outside: string = \"500\";\n  // 10 meter geofence\n  public static meeting_checkppoint_id_inner: string = \"505\";\n\n  // global varibale for leaving checkpoint radius and id\n  // 50 meters geofence\n  public static leaving_checkppoint_radius_outside: number = 51;\n  public static leaving_checkppoint_id_outside: string = \"400\";\n  // 10 meters geofence\n\n  public static leaving_checkppoint_id_inner: string = \"405\";\n\n  // global variable for destination radius and id\n  public static destination_radius: number = 12;\n  public static destination_id: string = \"300\";\n  // Normal navigational geofence\n\n  public static navigational_radius: number = 60;\n  public static navigational_leave_radius = 15\n\n  // -----------------------------------------------------------//\n\n  /**\n   * custom markers for the app using AwesomeMarker library\n   *\n   */\n  // start location marker on the map\n  public static startMarker: Object = {};\n\n  // destination location marker\n\n  public static destinationMarker: Object = {};\n  // meeting point marker\n  public static meetingPointMarkerIcon: Object = {};\n  // leaving point marker\n  public static leavingPointMarkerIcon: Object = {};\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DistancePipePipe } from 'src/app/pipes/distancePipe/distance-pipe.pipe';\nimport { TimePipe } from 'src/app/pipes/timepipe/time.pipe';\n\n\n\n@NgModule({\n  declarations: [DistancePipePipe,TimePipe],\n  imports: [\n    CommonModule\n  ],\n  exports:[DistancePipePipe, TimePipe]\n})\nexport class SharedModuleModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'distancePipe'\n})\nexport class DistancePipePipe implements PipeTransform {\n\n  transform(value: any): any {\n    let a;\n    if (value < 1000 && value>=0) {\n       a= value + ' m'\n    } else if (value < 0) {\n      a = 0 +' m'\n      \n    } else if (value > 1000) {\n      let b = value /1000\n      let c = parseFloat(b.toFixed(1));\n      a= c+\" km\"\n    }\n    return a;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'time'\n})\nexport class TimePipe implements PipeTransform {\n\n  transform(seconds: any): any {\n\n    let result\n    if (seconds < 60 && seconds >= 0) {\n      result = seconds + \" s\"\n      \n    } else if (seconds < 0) {\n      result = 0 + \" s\"\n      \n    } else if (seconds >= 60) {\n\n    let minutes: number = Math.floor(seconds / 60);\n      let secs: number = seconds % 60;\n      result = minutes + \":\"+ secs +\" min\" \n      \n    }\n\n    return result;\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n  \n  \n  // ! future implementation use slack for real time monitoring: -> https://medium.com/dailyjs/how-to-send-errors-into-slack-dc552e30506f\nexport class ErrorloggingService {\n\n  constructor() { }\n\n  logError(message: string, stack: string) {\n    // Send errors to be saved here\n    // The console.log is only for testing this example.\n    console.log('LoggingService: ' + message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n/* \n\nthis will only generate Notification fo the global error handling --> server + client side error handling\n\n\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  showSuccess(message: string): void {\n    // this.snackBar.open(message);\n    console.log(\"errorNotifcation success\",message)\n  }\n  \n  showError(message: string): void {\n    // The second parameter is the text in the button. \n    // In the third, we send in the css class for the snack bar.\n    // this.snackBar.open(message, 'X', {panelClass: ['error']});\n    console.trace(\"error trace \")\n    console.log(\"ERROR\",message)\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { AlertController } from \"@ionic/angular\";\nimport { Observable, timer } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AlertControlService {\n  /* \n\n    ! main aim of this service is to provode a centralised alert controls for the whole app\n    ! all the alert control must be called through this service in future \n \n\n\n */\n  tripspageAlerts = []; // contains alert object with the time of dimissal\n  timeInterval: number = 0;\n  timeOutArray = [];\n  overlayDelay: number = 1000;\n  timerSub: any;\n  constructor(private alertcontrol: AlertController) {}\n// get the current alert from the screen \n  getAlert() {\n    return new Promise((resolve) => {\n      this.alertcontrol.getTop().then((data) => {\n        console.log(\"TOP alert is \", data)\n        resolve(data)\n      })\n      \n    })\n    \n    \n  }\n  alertDismiss() {\n    return new Promise((resolve) => {\n      this.alertcontrol.dismiss().then((data) => {\n        console.log(data)\n        if (data) {\n          // empty the array for alerts \n          this.tripspageAlerts=[]\n        }\n        resolve(data)\n      })\n      \n    })\n  }\n  generateAlert(\n    header: string,\n    message: string,\n    button: string,\n    DimissDuration: number,\n    id\n  ) {\n    const alert = {\n      header: header,\n      message: message,\n      buttons: [\n        {\n          text: button,\n          role: \"confirm\",\n          handler: () => {},\n        },\n      ],\n      cssClass: \"home-back-alert\",\n      id: id\n    };\n    let alertObj = {\n      alert: alert,\n      DismissDuration: DimissDuration,\n    };\n    this.tripspageAlerts.push(alertObj);\n    let timeout = 0;\n    let sum = 0;\n    // console.log(\"Array\",JSON.stringify(this.tripspageAlerts));\n\n    if (this.tripspageAlerts.length - 1 == 0) {\n      timeout = 0;\n      this.timeOutArray = [];\n    } else {\n      sum = 0;\n      this.tripspageAlerts.forEach((element) => {\n        // console.log(JSON.stringify(element));\n\n        sum += element.DismissDuration;\n      });\n      timeout = sum;\n      // check if the lasttimeout array has the same timeout for execution or not if yes delay the next alert\n      if (this.timeOutArray.length != 0) {\n        let lastTimeout =\n          this.timeOutArray[this.timeOutArray.length - 1].timeout;\n        if (timeout == lastTimeout) {\n          timeout += this.overlayDelay;\n        }\n      }\n      // console.log(\"timeinterval\", this.timeInterval);\n      // timeout = timeout - (this.timeInterval + 1) * 1000;\n    }\n\n    this.show(timeout);\n  }\n\n  show(timeout) {\n    console.log(\"timeout\", timeout);\n\n    const t = setTimeout(\n      async () => {\n        // create alert here and show alert here\n\n        const alert = await this.alertcontrol.create(\n          this.tripspageAlerts[0].alert\n        );\n        alert.present().then(() => {\n          // console.log(\"dismiss duration\", this.tripspageAlerts[0].DismissDuration);\n          // this.startTimer();\n        });\n // ! \n        setTimeout(async () => {\n          // this.stopTimer();\n          this.tripspageAlerts.splice(0, 1);\n          this.timeOutArray.splice(0, 1);\n          await alert.dismiss();\n        }, this.tripspageAlerts[0].DismissDuration);\n      },\n      timeout > 0 ? timeout + this.overlayDelay : 0\n    );\n\n    this.timeOutArray.push({\n      timeoutindex: t,\n      Dismiss: this.tripspageAlerts[0].DismissDuration,\n      timeout: timeout,\n    });\n    // console.log(\"timeoutarray\", this.timeOutArray);\n  }\n  // ? this timers can be used in order to optimise the alerts on the screen\n\n  /* startTimer() {\n    this.timerSub = timer(0, 1000)\n      .pipe()\n      .subscribe((val) => {\n        console.log(\"val:\", val);\n        this.timeInterval = val;\n      });\n  }\n  stopTimer() {\n    this.timerSub.unsubscribe();\n  } */\n}\n\n","import { Injectable } from '@angular/core';\n// import { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n//import { map } from 'rxjs/operators';\n\nimport { Config, IonicModule } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\n\n/*\n * HELPER for making config-changes (ionic-angular's Config) persistent\n */\n@Injectable()\nexport class AppConfig {\n\n  constructor(public storage: Storage, public config: Config) {\n\n  }\n\n  /**\n   * Get the value assocated with the given key.\n   * @return Promise that resolves with the value\n   */\n  get(key: any): Promise<any>{\n\n    return this.storage.get(key).then(value => {\n\n      //if no value in storage: use default from config\n      if(typeof value === 'undefined' || value === null){\n        return this.config.get(key);\n      }\n      return value;\n\n    });\n  }\n\n  /**\n   * Set the value for the given key.\n   * @param key the key to identify this value\n   * @param value the value for this key\n   * @return Promise that resolves when the value is set\n   */\n  set(key: string, value: any): Promise<any> {\n    return this.storage.set(key, value);\n  }\n  /**\n   * Remove any value associated with this key.\n   * @param key the key to identify this value\n   * @return Promise that resolves when the value is removed\n   */\n  remove(key: string): any{\n    return this.storage.remove(key);\n  }\n  /**\n   * Clear the entire key value store. WARNING: HOT!\n   * @return Promise that resolves when the kv store is cleared\n   */\n  clear(): any {\n    return this.storage.clear();\n  }\n  /**\n   * @return the number of keys stored.\n   */\n  length(): any {\n    return this.storage.length;\n  }\n  /**\n   * @return the keys in the store.\n   */\n  keys(): any {\n    return this.storage.keys();\n  }\n  /**\n   * Iterate through each key,value pair.\n   * @param iteratorCallback a callback of the form (value, key, iterationNumber)\n   */\n  forEach(iteratorCallback: (value: any, key: string, iterationNumber: Number) => any): any {\n    return this.storage.forEach(iteratorCallback);\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { BLE } from \"@awesome-cordova-plugins/ble/ngx\";\nimport { promise } from \"protractor\";\nimport { throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class BluetoothLEService {\n  scanTimer = 6; // the value of timer is in seconds\n  bluetoothSettingsopen: boolean = false;\n  BLE_uuid: string = \"d619e693-26eb-4241-95c6-304608fa5b5f\";\n  wearableID = \"3C:61:05:2F:FA:C6\";\n  wearable_characterstics = \"d619e693-26eb-4241-95c6-304608fa5b5f\";\n  wearable_service = \"63bbf1f7-a049-483a-ad01-af803a1929ae\";\n\n  /* \n  tech specs of the wearable for connection required to connect with the app\n\n\n  * address: \"3C:61:05:2F:FA:C6\";\n  * class: 7936;\n  * id: \"3C:61:05:2F:FA:C6\";\n  * name: \"SmartWearable\";\n  * characterstics: \"d619e693-26eb-4241-95c6-304608fa5b5f\"\n  * service = \"63bbf1f7-a049-483a-ad01-af803a1929ae\"\n  \n   */\n  availableDevices = [];\n  Bt_Interval;\n  intervalStarted: boolean = false;\n  isBtEnableVariable: boolean = false;\n\n  constructor(private ble: BLE) {}\n\n  // check function also required\n\n  /*\n   TODO: check bluetooth enable or not ==> // ? done\n   TODO: if not open settings = // ? done\n   TODO: if yes, ask for connection with bluetooth wearable device == // ? done\n   \n  */\n  startIntervalCheck() {\n    this.intervalStarted = true;\n    console.log(\"BT interval started\");\n    this.Bt_Interval = setInterval(() => {\n      console.log(\"calling Bt check again\");\n      this.bluetoothCheck();\n    }, 3000);\n  }\n\n  bluetoothCheck(): Promise<boolean> {\n    return new Promise((resolve) => {    \n      this.isBtEnable().then((value) => {\n        console.log(\"value is \", value)\n        this.isBtEnableVariable= value\n        if (value) {\n          this.bluetoothSettingsopen = false;\n          if (this.intervalStarted) {\n            clearInterval(this.Bt_Interval);\n            this.intervalStarted = false;\n          }\n          // this.scanDevices();\n          // add a toast controller for bluetooth\n        } else {\n          if (this.bluetoothSettingsopen) {\n            console.log(\"BT settings still open\");\n          } else {\n            console.log(\"bleutoothsettings closed\", this.bluetoothSettingsopen);\n            this.openBTSettings();\n            this.startIntervalCheck();\n          }\n        }\n        resolve(true)\n      }, (error) => {\n        console.error(\"couldnt check btenable \", error)\n        resolve(false)\n      })\n    })\n  }\n\n  scanDevices() {\n    this.ble.scan(this.availableDevices, this.scanTimer).subscribe((device) => {\n      console.log(\"scaned\", device);\n    });\n  }\n\n  ConnectWearable() {\n    this.ble\n      .connect(this.wearableID)\n      .pipe(\n        catchError((err) => {\n          console.error(\"connection threw error \", err);\n          return throwError(\"error while connecting\" + err);\n        })\n      )\n      .subscribe((callback) => {\n        console.log(\"connection with wearable was succesfull\", callback);\n        // ! send data here for automatic connection.\n      });\n  }\n\n  /* \n\n  function is modified to send data to a device and the format of data to be sent is uint8array\n\n */\n  sendData(data: number, id, service, characterstic) {\n    var packet = new Uint8Array(1);\n    packet[0] = data; // 0x01;\n    this.ble.write(id, service, characterstic, packet.buffer).then(\n      (success) => {\n        console.log(\"data succesfully sent\", success);\n      },\n      (error) => {\n        console.error(\"unsucessful data send\", error);\n      }\n    );\n  }\n\n  // disconnects a particular device connection with specified device id\n  disconnect(id: string) {\n    this.ble.disconnect(id).then(\n      (success) => {\n        console.log(\"Succesfully disconnected\", success);\n      },\n      (error) => {\n        console.log(\"Unsucessful disconnection\", error);\n      }\n    );\n  }\n  /*   \n\n it returns the data that is transmited via bluetooth , with the device characterstics stated as \n both read and write \n\n    @ param takes device id , service and characterstic uuid of the device\n\n */\n\n  recieveData(id, service, characterstic) {\n    this.ble.read(id, service, characterstic).then(\n      (success) => {\n        console.log(\n          \"reading back\",\n          success,\n          \" type of recieved data :\",\n          typeof success\n        );\n        console.log(\"type of recieved data\");\n      },\n      (error) => {\n        console.log(\"error reading value back \", error);\n      }\n    );\n  }\n\n  // for opening bluetooth settings\n\n  openBTSettings() {\n    var check: boolean;\n\n    this.ble.showBluetoothSettings().then(\n      (success) => {\n        console.log(\"bluetooth settings opened\", success);\n        check = true;\n        this.bluetoothSettingsopen = true;\n        console.log(\"check in success \", check);\n      },\n      (error) => {\n        console.log(\"error opening bluetooth settings : \", error);\n        check = false;\n      }\n    );\n  }\n\n  // for enabling bluetooth on the device\n\n  enableBluetooth() {\n    this.ble.enable().then(\n      (success) => {\n        console.log(\"bluetooth succesfully enabled\");\n      },\n      (error) => {\n        console.error(\"unable to enable bluetooth services on device\");\n      }\n    );\n  }\n\n  // check if bluetooth is enable or not\n\n  isBtEnable(): Promise<boolean> {\n    return new Promise((resolve) => {\n      console.log(\"check bt enabled\");\n      this.ble.isEnabled().then(\n        (success) => {\n          console.log(\"bluetooth is enabled\", success);\n          this.isBtEnableVariable = true;\n          resolve(true)\n        },\n        (fail) => {\n          console.error(fail);\n          resolve(false)\n        }\n      );\n    });\n  }\n\n  isBtConnected(id: string) {\n    this.ble.isConnected(id).then(\n      (success) => {\n        console.log(\"device connected\");\n        return true;\n      },\n      (eror) => {\n        console.error(\"device disconnected\");\n        return false;\n      }\n    );\n  }\n\n  //for cehcking connection with bluetooth device\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  constructor() { }\n  getClientMessage(error: Error): string {\n    if (!navigator.onLine) {\n        return 'No Internet Connection';\n    }\n    return error.message ? error.message : error.toString();\n}\n\ngetClientStack(error: Error): string {\n    return error.stack;\n}\n\ngetServerMessage(error: HttpErrorResponse): string {\n    return error.message;\n}\n\ngetServerStack(error: HttpErrorResponse): string {\n    // handle stack trace\n    return 'stack';\n}\n}\n","import { Inject, Injectable } from \"@angular/core\";\nimport { Vibration } from \"@awesome-cordova-plugins/vibration/ngx\";\nimport { Platform, ToastController } from \"@ionic/angular\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { OutputControllerService } from \"../outputController/output-controller.service\";\nimport { RestApiService } from \"../rest-api/rest-api.service\";\nimport { error } from \"console\";\nexport interface MeshNetworkMessage {\n  messageType: string;\n  device_id: string;\n  leader: string;\n  swarm_id: string;\n  previous_endpoints: string[];\n  tripintersection_geometry: string;\n  current_endpoints: string[];\n}\n\nexport enum swarmEvent {\n  \"none\",\n  \"split\",\n  \"merge\",\n}\n\ndeclare var NearbyConnections: any;\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class Events {\n  swarmId: string;\n  cercle = 2;\n  timeoutflag: boolean = true;\n  selected_endpoint: string;\n  current_user_object: any;\n  updated_user_list;\n  second_list: any;\n  toasts = [];\n  swarmCreated: boolean = false;\n\n  // changes for Mesh network synchronization\n\n  dataPacket: MeshNetworkMessage = {\n    messageType: \"\",\n    device_id: this.rest.deviceId,\n    leader: null,\n    swarm_id: null,\n    previous_endpoints: [],\n    tripintersection_geometry: null,\n    current_endpoints: [],\n  };\n\n  meshNetworkDB: Array<MeshNetworkMessage> = [];\n  meshLeader: string = null;\n\n  constructor(\n    private rest: RestApiService,\n    private toastCtrl: ToastController,\n    private vibration: Vibration,\n    private platform: Platform,\n    private outputConntroller: OutputControllerService\n  ) {\n    /**\n     * TODO :\n     *  connection is done and we send the data to the local mesh network\n     *\n     * 1) connection happened\n     * 2)\n     *\n     * you are in connection\n     * send the data to the local network for them to know whats happening // ? should be done during the timeout or already before that\n     *\n     * once the db has been initialized\n     *\n     * timeout comes -> there we decide if a person is in swarm, or not\n     *\n     * if yes -> show a circle around his marker\n     *\n     * if not -> do nothing\n     *\n     * ------------------------------- for its own user UI we are done -------------------------\n     *\n     * ---------------------  now comes the client backend part ---------------------\n     *\n     * DB needs to be to its updated list\n     *\n     * *Important task*: where to send the data to the local network and which previous and current lists should be sent\n     *\n     *\n     * check in filtered_db if any leader present\n     *\n     * if yes -> get its swarm id assign leader and start updating\n     *    if more than one leader present -> get all swarm ids and get ready for merge\n     *\n     * if not -> check if in previous list if they were in same list or not\n     *\n     * now in mesh_list check if there is any leader present\n     *\n     *\n     *\n     *\n     *\n     *\n     *\n     *\n     *\n     *\n     *\n     *\n     *\n     *\n     *\n     * // we can check if there was any update in the same swarm id -> if yes then there is still a swarm present but if not then no swarm available\n     * // it takes the same amount of copmputing resources as that of sending the message to the local network\n     *\n     * ! check if the previous leader is there or not -> if yes -> then flush message previous messages\n     */\n  }\n\n  // make event manager do the work , for all the events --> joining, create, leave {}\n  /**\n   * time in ms to check the connection endpoints\n   */\n  delay_time: number = 5000;\n  // global variable\n  /**\n   * actuall real time mesh nodes\n   */\n\n  current_object: any;\n  current_list: any;\n  /**\n   * Previous state of the mesh nodes`\n   */\n  previous_object: any;\n  previous_list: any = [];\n\n  /**\n   * Intermediate storage\n   */\n  temp_object: any;\n  temp_list: any;\n\n  user_meshId: any = this.rest.deviceId;\n  first_initalize: boolean = true;\n  swarmInterval;\n  swarmIntervalTime: number = 5000;\n  // ! better of the service is changes to new service with promise as a type\n  initialize(obs) {\n    console.log(\n      \"------------------------------new ---------------\",\n      \"device id\",\n      this.rest.deviceId,\n      \"USer id \",\n      this.rest.userId\n    );\n    console.log(\"[events]initializing\", obs);\n    console.log(\"------------------------------[event]---------------\");\n    console.log(\"[events]initializing\", JSON.stringify(obs));\n\n    console.log(\n      \"check before: prev -\",\n      this.previous_object,\n      \"temp:\",\n      this.temp_object\n    );\n    // todo : send first message for mesh network DB\n\n    /**\n     *\n     * [\n     *  \"event_type\": MESSAGE_RECEIVED,\n     *   \"data_string\": \"datastring\"\n     *  ]\n     */\n\n    // TODO : differentitate the flush message from other events\n    // from trips page initialize new function to controll DB\n    /* if (obs[\"event_type\"] == \"MESSAGE_RECEIVED\") {\n      console.log(\"Message recieved\", obs);\n      // ? function which interprets the message recieved\n\n      this.groupDBController(obs);\n\n      return;\n    } */\n    this.current_object = obs;\n    // this.sendMessageToMeshNetwork(\"first\"); // ! could be implemented after timeout\n\n    if (this.previous_list.length == 0) {\n      console.log(\"11111\");\n      this.temp_object = this.current_object;\n      this.previous_object = this.temp_object;\n      this.previous_list = this.previous_object[\"endpoint_list\"];\n      this.first_initalize = false;\n      this.cercle = 2;\n      console.log(\"firsrt initialize\", JSON.stringify(this.previous_list));\n    } else {\n      console.log(\"present in a swarm\");\n      // console.log(\"timeoutflag\", this.timeoutflag)\n      if (this.timeoutflag) {\n        this.timeoutflag = false;\n\n        setTimeout(() => {\n          console.log(\"-------------------timeout------------\");\n          let curr_obj = this.current_object;\n          console.log(\n            \"[events- subscribed in timeout to ]\",\n            JSON.stringify(this.current_object)\n          );\n          //TODO: check here if leader present or not\n\n          this.temp_object = curr_obj;\n          console.log(\n            \" prev -\",\n            this.previous_object,\n            \"temp:\",\n            this.temp_object\n          );\n          //console.log(\"-------------conditional-------\");\n          this.temp_list = this.temp_object[\"endpoint_list\"];\n          console.log(\"comparing variables are : \");\n          console.log(\"temp\", JSON.stringify(this.temp_list));\n          //this.previous_list=this.previous_object[\"endpoint_list\"];\n          console.log(\"prev\", JSON.stringify(this.previous_list));\n          // compare if temp and prev lists here\n          const array1Sorted = this.previous_list.slice().sort();\n          this.temp_list\n            .slice()\n            .sort()\n            .every(function (value, index) {\n              console.log(value === array1Sorted[index]);\n              return value === array1Sorted[index];\n            });\n          const array2Sorted = this.previous_list.slice().sort();\n          if (this.temp_list.length == this.previous_list.length) {\n            if (\n              this.temp_list\n                .slice()\n                .sort()\n                .every(function (value, index) {\n                  return value === array2Sorted[index];\n                })\n            ) {\n              // the value of cercle remains same\n              // this.cercle= this.cercle\n              // ! reconnected to swarm\n              console.log(\"reconnneted to swarm \");\n              // this.generateToast(\"reconnected to swarm \");\n            } else {\n              // ! user is replaced by someone else\n              console.log(\n                \"New user joined the network and one other user left\"\n              );\n            }\n          }\n          /**\n           * create new swarm & new users joining\n           * *create new swarm and add more users in swarm*\n           */\n          if (this.temp_list.length > this.previous_list.length) {\n            const joined_users =\n              this.temp_list.length - this.previous_list.length;\n            if (this.previous_list.length < 2) {\n              // ! swarm created\n              this.cercle = 1;\n              /* // TODO : make sure the database is updated\n\n              this.swarmGroupController(\n                this.temp_list,\n                this.previous_list,\n                swarmEvent.none\n              );\n */\n              // swarm created\n              /* this.generateToast(\"You joined the swarm\");\n            this.vibration.vibrate([2000, 1000, 2000]); */\n              this.outputConntroller.genereateOutput(\"joinSwarm\");\n            } else {\n              // {joined users} users joined the swarm\n              //swarm joined\n              // ! someone else joined the swarm\n              this.cercle = 1;\n              /* this.generateToast(\"Someone joined swarm\");\n\n            this.vibration.vibrate([1000]); */\n              /*   //todo: assign leader\n              this.swarmGroupController(\n                this.temp_list,\n                this.previous_list,\n                swarmEvent.none\n              ); */\n              this.outputConntroller.genereateOutput(\"userJoinedSwarm\");\n            }\n          }\n          /**\n           *\n           */\n          if (this.temp_list.length < this.previous_list.length) {\n            const left_users =\n              this.previous_list.length - this.temp_list.length;\n            if (this.temp_list.length == 0) {\n              // ! you left the swarm\n              this.cercle = 2;\n              // reset all the information for meshNetwork and leader\n              /* if (this.meshLeader == this.user_meshId) {\n                // todo : delete swarm\n                // todo reset all the information for meshNetwork and leader\n              } else {\n                //todo : only reset the meshNetwork\n              }\n              this.resetLocalClient(); */\n\n              this.outputConntroller.genereateOutput(\"leaveSwarm\");\n            } else {\n              // swarm left\n              // {left_users} left the swarm\n              /* this.generateToast(\"Someone left the swarm \");\n            this.vibration.vibrate([4000]); */\n              // ! someone left the swarm\n              //! SPLIT COULD HAPPEN HERE\n\n              // todo : only need to update the meshNetwork\n              this.outputConntroller.genereateOutput(\"userLeftSwarm\");\n            }\n          }\n          // flush message only when you are the leader\n          // ! commented out \n         /*  if (this.are_you_leader) {\n            this.sendMessageToMeshNetwork(\n              \"first\",\n              this.previous_list,\n              this.temp_list\n            );\n          } */\n\n          let prev = this.previous_list;\n          this.previous_object = this.temp_object;\n          this.previous_list = this.temp_object[\"endpoint_list\"];\n\n          // * implementation for new split /merge feature\n          // ! commented out \n          // this.swarmGroupController(this.temp_list, prev, swarmEvent.none);\n          // using the help of local DB we see the current list and check all the inforamtion about all other user\n\n          this.timeoutflag = true;\n        }, this.delay_time);\n      } else {\n      }\n    }\n  }\n  swarmGroupController(currentList, previousList, event: swarmEvent) {\n    console.log(\"swarmGroupController\");\n    let mesh_list = currentList;\n    let prev_list = previousList;\n    // filterred db contains the list of current object devices with swarmid and leader information\n    let filtered_db = this.meshNetworkDB.filter((obj) => {\n      mesh_list.includes(obj.device_id);\n    });\n\n    console.log(\n      \"🚀 ~ file: events.service.ts:353 ~ Events ~ letfiltered_db=this.meshNetworkDB.filter ~ filtered_db:\",\n      filtered_db\n    );\n\n    if (mesh_list.length == 0) {\n      // there are no member present\n      this.resetLocalClient();\n      // TODO: delete swarm somewhere \n      return;\n    }\n\n    if (filtered_db.length == 0) {\n      if (this.swarmId) {\n        // we were in swarm group , a swarm split have happened\n        // leader is not present in the mesh endpoint list, but a endpoint from that leader is present\n        // generate new Split swarm Id\n        let old_swarm_id = this.swarmId;\n        let new_swarm_id = old_swarm_id + \"/001/\" + uuidv4() + \"/\";\n        let id = this.assignLeader(mesh_list);\n        this.swarmId = new_swarm_id;\n        if (id == this.user_meshId) {\n          // create new Split swarm\n          this.createSwarm(mesh_list, swarmEvent.split);\n        } else {\n          // do nothing as you are not the leader\n        }\n      } else {\n        // no swarm Id present -> hence individual user\n        // create new swarm\n        // for creating new swarm from individual user\n\n        // there are still some user who don't have a mesh leader\n        // thus are considered individual users\n        let id = this.assignLeader(mesh_list);\n        if (this.user_meshId == id) {\n          //create swarm\n\n          this.generateSwarmID(null, swarmEvent.none);\n          this.createSwarm(mesh_list, swarmEvent.none);\n          this.generateToast(\"creating a new swarm\");\n          console.log(\"creating new swarm swarmId :\", this.swarmId);\n        }\n      }\n\n      return;\n    }\n\n    let groupedArray = filtered_db.reduce((acc, obj) => {\n      const key = obj.leader;\n      if (!key) {\n        // do nothing\n      } else {\n        if (!acc[key]) {\n          acc[key] = [];\n        }\n        acc[key].push(obj);\n        return acc;\n      }\n    }, {});\n\n    console.log(\"groupedArray\", groupedArray);\n    if (Object.keys(groupedArray).length == 1) {\n      console.log(\"one group present \");\n      let key = Object.keys(groupedArray)[0];\n      if (mesh_list.includes(key)) {\n        // leader is present in the mesh endpoint list\n        const result = this.meshNetworkDB.find((obj) => obj.device_id == key);\n        let id = this.assignLeader(mesh_list);\n        this.swarmId = result.swarm_id;\n        if (id == this.user_meshId) {\n          // update the swarm as you are the leader\n          this.updateUsersInSwarm(mesh_list);\n        } else {\n          // do nothing as you are not the leader\n        }\n      } else {\n        /* // leader is not present in the mesh endpoint list, but a endpoint from that leader is present\n        let key = Object.keys(groupedArray)[0];\n        const result = this.meshNetworkDB.find((obj) => obj.device_id == key);\n        // generate new Split swarm Id\n        let old_swarm_id = result.swarm_id;\n        let new_swarm_id = old_swarm_id + \"/001/\" + uuidv4() + \"/\";\n        let id = this.assignLeader(mesh_list);\n        this.swarmId = new_swarm_id;\n        if (id == this.user_meshId) {\n          // create new Split swarm\n          this.createSwarm(mesh_list, swarmEvent.split);\n        } else {\n          // do nothing as you are not the leader\n        }\n */\n        // this.generateSwarmID(old_swarm_id,swarmEvent.split);\n      }\n    } else if (Object.keys(groupedArray).length >= 2) {\n      // if you are the leader delete old swarm\n      if (Object.keys(groupedArray).includes(this.user_meshId)) {\n        this.rest.deleteSwarm(this.swarmId);\n      }\n\n      // get information about all the previous leader\n      const filteredArray = this.meshNetworkDB.filter((obj) =>\n        Object.keys(groupedArray).includes(obj.leader)\n      );\n      // assign new leader\n      let id = this.assignLeader(mesh_list);\n      if (this.user_meshId == id) {\n        // you are the leader\n        const concated_swarm_id = filteredArray\n          .map((obj) => obj.swarm_id)\n          .join(\"+\");\n        this.swarmId = concated_swarm_id;\n        this.generateSwarmID(concated_swarm_id, swarmEvent.merge);\n        this.createSwarm(mesh_list, swarmEvent.merge);\n      } else {\n        // do  nothing as you are not the leader\n      }\n    } else {\n      console.log(\"no leader\");\n\n      if (filtered_db.length !== 0) {\n        console.log(\n          \"🚀 ~ file: events.service.ts:427 ~ Events ~ swarmGroupController ~ filtered_db:\",\n          filtered_db\n        );\n        // reset everything as it has left all mesh network\n        if (this.meshLeader == this.user_meshId) {\n          // delete the swarm\n          console.log(\"delete the swarm\", this.swarmId);\n          this.generateToast(\"deleting  a new swarm\");\n          this.rest.deleteSwarm(this.swarmId);\n        } else {\n          console.log(\"you were not for deleting swarm\");\n        }\n      } else {\n        /*  // for creating new swarm from individual user \n\n        // there are still some user who don't have a mesh leader\n        // thus are considered individual users\n        let id = this.assignLeader(mesh_list);\n        if (this.user_meshId == id) {\n          //create swarm\n\n          this.generateSwarmID(null, swarmEvent.none);\n          this.createSwarm(mesh_list, swarmEvent.none);\n          this.generateToast(\"creating a new swarm\");\n          console.log(\"creating new swarm swarmId :\", this.swarmId);\n        } */\n      }\n    }\n    // if leader then send sync message\n\n    if (this.meshLeader == this.user_meshId) {\n      this.sendMessageToMeshNetwork(\n        \"Leader\",\n        this.previous_list,\n        this.temp_list\n      );\n    }\n  }\n\n  /**\n   * rest the data packet\n   * i.e\n   * Messagetype  -> \"\"\n   * Swarm Id -> null\n   * current_endpoint ->[]\n   * previous_endpoint -> []\n   * leader -> null\n   */\n\n  resetDataPacket() {\n    this.dataPacket.current_endpoints = this.dataPacket.previous_endpoints = [];\n    this.dataPacket.leader = this.dataPacket.swarm_id = null;\n    this.dataPacket.messageType = \"\";\n  }\n\n  /**\n   * leader array provides us an overview of the current swarm leader\n   * and help to determine which event should be triggered\n   *\n   * For example : swarmEvent.none => means an individual user have joined a group or another individual\n   *              swarmEvent.split => a group has splitted in different users\n   *               swarmEvent.merge => two groups have merged together\n   */\n  //! todo: check the status of the leader from the swarm as duplicates can still get in\n  // done\n  leaderArray = [];\n  /**\n   *   main objective is to store all the flush messages and reset after the whole process is complete\n   * @param obj object recieved from the mesh network\n   * @currently_not_in_use as If another method is used and we want consistent data this could be used\n   */\n\n  groupDBController(obj) {\n    try {\n      if (!this.meshNetworkDB) {\n        this.meshNetworkDB = [];\n      }\n\n      // save your information in DB if you are the leader\n      if (this.are_you_leader) {\n        if (!this.user_meshId || !this.dataPacket.device_id) {\n          this.user_meshId = this.rest.deviceId;\n          this.dataPacket.device_id = this.user_meshId;\n          console.log(\"mesh user id undefined\");\n        }\n        let ref_self = this.meshNetworkDB.findIndex((user) => {\n          return user.device_id == this.user_meshId;\n        });\n        if (ref_self != -1) {\n          // object found in local database  -> update message\n          this.meshNetworkDB[ref_self] = this.dataPacket;\n        } else {\n          // initialize new object instance in local database\n          console.log(\"self object\", this.dataPacket);\n          this.meshNetworkDB.push(this.dataPacket);\n        }\n      }\n\n      let userMessage: MeshNetworkMessage = JSON.parse(obj[\"data_string\"]);\n      console.log(\n        \"🚀 ~ file: events.service.ts:541 ~ Events ~ groupDBController ~ userMessage:\",\n        userMessage\n      );\n      if (userMessage.messageType == \"Leader\") {\n        // this is a sync message by the leader\n        this.swarmId = userMessage.swarm_id;\n        if (this.meshLeader != userMessage.leader) {\n          console.error(\n            \"error assigning leader\",\n            this.meshLeader,\n            \"sync message by leader\",\n            userMessage.leader\n          );\n        }\n        // reset the database as we don't need it anymore\n        this.meshNetworkDB = [];\n        return;\n      }\n\n      let ref = this.meshNetworkDB.findIndex((user) => {\n        return user.device_id == userMessage.device_id;\n      });\n      // TODO : check if already present; yes -> update DB ; no -> push //?done\n\n      if (ref != -1) {\n        // object found in local database  -> update message\n        this.meshNetworkDB[ref] = userMessage;\n      } else {\n        // initialize new object instance in local database\n        this.meshNetworkDB.push(userMessage);\n      }\n    } catch (error) {\n      console.error(\"error updating netwrok DB\", error);\n    }\n  }\n\n  /**\n   *   main objective is to maintain the mesh network database and store all the necessary information needed\n   * @param obj object recieved from the mesh network\n   * @currently_not_in_use as If another method is used and we want consistent data this could be used\n   */\n  groupDBController_advance(obj) {\n    console.log(\n      \"🚀 ~ file: events.service.ts:519 ~ Events ~ groupDBController ~ obj:\",\n      obj\n    );\n    console.log(\"self user id \", this.rest.deviceId);\n    try {\n      if (!this.user_meshId || !this.dataPacket.device_id) {\n        this.user_meshId = this.rest.deviceId;\n        this.dataPacket.device_id = this.user_meshId;\n        console.log(\"mesh user id undefined\");\n      }\n\n      // put yourself in the database\n      if (!this.meshNetworkDB) {\n        this.meshNetworkDB = [];\n      }\n      console.log(\"Mesh network before adding object\", this.meshNetworkDB);\n\n      let ref_self = this.meshNetworkDB.findIndex((user) => {\n        return user.device_id == this.user_meshId;\n      });\n      if (ref_self != -1) {\n        // object found in local database  -> update message\n        this.meshNetworkDB[ref_self] = this.dataPacket;\n      } else {\n        // initialize new object instance in local database\n        console.log(\"self object\", this.dataPacket);\n        this.meshNetworkDB.push(this.dataPacket);\n      }\n\n      let userMessage: MeshNetworkMessage = JSON.parse(obj[\"data_string\"]);\n      console.log(\n        \"🚀 ~ file: events.service.ts:541 ~ Events ~ groupDBController ~ userMessage:\",\n        userMessage\n      );\n      if (userMessage.messageType == \"Leader\") {\n        // this is a sync message by the leader\n        this.swarmId = userMessage.swarm_id;\n        if (this.meshLeader != userMessage.leader) {\n          console.error(\n            \"error assigning leader\",\n            this.meshLeader,\n            \"sync message by leader\",\n            userMessage.leader\n          );\n        }\n\n        // todo : check of the list provided by the leader has same number of users in the group\n\n        // todo : send new sync message in the group\n        // to sync swarm_id in the mesh network\n        // ! no need as leader will send the message in swarm network\n        // this.sendMessageToMeshNetwork(\"sync\");\n\n        // todo : delete leaderArray and update with the new leader\n        return;\n      }\n\n      let ref = this.meshNetworkDB.findIndex((user) => {\n        return user.device_id == userMessage.device_id;\n      });\n      // TODO : check if already present; yes -> update DB ; no -> push //?done\n\n      if (ref != -1) {\n        // object found in local database  -> update message\n        this.meshNetworkDB[ref] = userMessage;\n      } else {\n        // initialize new object instance in local database\n        this.meshNetworkDB.push(userMessage);\n      }\n\n      // TODO : check what are the present leader and sync the in\n      if (userMessage.leader) {\n        console.log(\"Leader found \", userMessage.leader);\n        let ref2 = this.leaderArray.findIndex((user) => {\n          return user.device_id == userMessage.device_id;\n        });\n        // TODO : check if already present; yes -> update DB ; no -> push //?done\n\n        if (ref2 != -1) {\n          // object found in local database  -> update message\n          this.leaderArray.push(userMessage.leader);\n        } else {\n          console.log(\"user with id :\", userMessage.leader, \"already exist\");\n        }\n      } else {\n        console.log(\"No Leader present\");\n      }\n    } catch (error) {\n      console.error(\"error updating netwrok DB\", error);\n    }\n  }\n  /**\n   * this function resets the local service inputs\n   * @return{void}\n   */\n\n  resetLocalClient() {\n    this.resetDataPacket();\n    this.swarmId = null;\n    this.meshNetworkDB = [];\n    this.meshLeader = null;\n    this.leaderArray = [];\n    this.previous_list = this.current_list = [];\n    this.previous_object = this.current_object = null;\n  }\n\n  sendMessageToMeshNetwork(messageType: string, previousList, currentList) {\n    // update data packet to send the mesh network\n    console.log(\"dataPacket\", this.dataPacket);\n    this.dataPacket.messageType = messageType;\n    this.dataPacket.swarm_id = this.swarmId;\n    this.dataPacket.device_id = this.user_meshId;\n    this.dataPacket.current_endpoints = currentList\n      ? this.current_object[\"endpoint_list\"]\n      : [];\n    this.dataPacket.previous_endpoints = previousList\n      ? this.previous_object[\"endpoint_list\"]\n      : [];\n    this.dataPacket.leader = this.meshLeader;\n    //todo : get trip intersection to share with the whole mesh network\n    // !this.dataPacket.tripintersection_geometry\n\n    if (this.platform.is(\"android\")) {\n      this.platform.ready().then(() => {\n        if (NearbyConnections) {\n          NearbyConnections.flushMessage(\n            function (success) {\n              // successful message sent\n              console.log(\"message sent in the mesh network\");\n            },\n            function (error) {\n              // error sending message\n              console.error(\"[fatal] Message not sent\");\n              setTimeout(() => {\n                console.log(\"sending message again\");\n                this.sendMessageToMeshNetwork(\n                  messageType,\n                  previousList,\n                  currentList\n                );\n              }, 3000);\n            },\n            JSON.stringify(this.dataPacket)\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * this function returns a user ID : string\n   * which is the smallest user Id of all\n   *\n   * @returns {void} the min user Id from the list\n   */\n  getMinUser(list): string {\n    console.log(\"min user called \", JSON.stringify(list));\n    let minUser;\n    minUser = list.slice().sort()[0];\n    console.log(\"min user\", minUser);\n    return minUser;\n  }\n\n  /**\n   * generates a swarm in the backend\n   * @param list list of the active user in the group\n   */\n\n  createSwarm(list, event: swarmEvent) {\n    let list_array = [];\n    list.forEach((element) => {\n      list_array.push({\n        device_id: element,\n      });\n    });\n    // TODO : generate swarm id\n    let id = this.generateSwarmID(event);\n    console.log(\"array to be given list array \", list_array);\n    this.generateToast(\"Leader of the group\");\n    this.rest.postSwarm(list_array, this.swarmId).then(\n      (success) => {\n        console.log(\"postswarm\", JSON.stringify(success));\n        this.swarmCreated = true;\n      },\n      (error) => {\n        console.error(\"[ERROR] creating swarm id :\", id, \" \", error);\n      }\n    );\n  }\n  /**\n   * This helps to generate a new Swarm Id for the group\n   * Usefull in the merge and split events\n   *\n   */\n\n  // TODO : ! remove optional param\n\n  generateSwarmID(oldSwarmId, event?: swarmEvent): string {\n    let id;\n    if (!oldSwarmId) {\n      id = uuidv4();\n    } else {\n      if (event == swarmEvent.split) {\n        id = oldSwarmId + \"/_001\";\n      }\n      if (event == swarmEvent.merge) {\n        id = oldSwarmId;\n      }\n    }\n    this.swarmId = id;\n    console.log(\"generate new swarmId\", id);\n    return this.swarmId;\n  }\n  /**\n   * function helps to check and assign a leader\n   */\n  are_you_leader: boolean = false;\n  assignLeader(list) {\n    let leader = this.getMinUser(list);\n    // check if the leader has a swarm id\n    this.meshLeader = leader;\n    if (this.meshLeader == this.user_meshId) {\n      this.are_you_leader = true;\n    } else {\n      this.are_you_leader = false;\n    }\n    console.log(\"leader\", leader, \"are you leader \", this.are_you_leader);\n    return leader;\n  }\n  /**\n   * REST API call for updating members in swarm\n   * @param list list of all members in swarm\n   */\n  updateUsersInSwarm(list) {\n    console.log(\"updateUsersInSwarm called \", JSON.stringify(list));\n    let list_array = [];\n    list.forEach((element) => {\n      list_array.push({\n        device_id: element,\n      });\n    });\n    this.rest.updateSwarm(list_array, this.swarmId).then(\n      (suc) => {\n        console.log(\"upadte swarm :\", suc);\n      },\n      (error) => {\n        console.error(\"Error updating swarm members :\", error);\n      }\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  event_stop() {\n    this.previous_object = this.temp_object = {};\n    this.previous_list = this.temp_list = [];\n    this.cercle = 2; // event re-initialized no circle present\n  }\n  generateToast(msg, color?, duration?) {\n    console.log(\"from toast\", msg);\n    const toast = {\n      message: msg,\n      color: color || \"dark\",\n      duration: duration || 5000,\n    };\n    this.toasts.push(toast);\n    const timeout = (this.toasts.length - 1) * toast.duration;\n    this.show(timeout);\n  }\n  show(timeout) {\n    setTimeout(\n      async () => {\n        const toast = await this.toastCtrl.create(this.toasts[0]);\n        await toast.present();\n        this.toasts.splice(0, 1);\n      },\n      timeout > 0 ? timeout + 800 : 0\n    );\n  }\n\n  getUpdated_cercle(): number {\n    // console.log(\"cercle is :\", this.cercle);\n    // console.log(\"swarm participants\", this.previous_list.length);\n\n    return this.cercle;\n  }\n  set_cercle(x: number) {\n    this.cercle = x;\n  }\n\n  initializeFunction0(obj) {\n    console.log(\"object recieved to the service : \", obj);\n  }\n\n  getUpdated_card() {\n    return \"4\";\n  }\n\n  getSwarmLength() {\n    return this.previous_list.length;\n  }\n\n  /**\n   * @deprecated\n   * @param list\n   */\n  updateInfoSwarm(list) {\n    this.swarmInterval = setInterval(() => {\n      this.rest.updateSwarm(list, this.rest.swarmId);\n    }, this.swarmIntervalTime);\n  }\n  /**\n   * @deprecated\n   */\n\n  stopUpdatinginfo() {\n    clearInterval(this.swarmInterval);\n  }\n}\n","\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { LogEvent, Logger, LogLevel, getPrimaryLoggerTransport, stringifyLogEvent } from '@obsidize/rx-console';\nimport { CordovaFileEntryApi, RotatingFileStream } from '@obsidize/rotating-file-stream';\nimport { SocialSharing } from '@awesome-cordova-plugins/social-sharing/ngx';\nimport { File } from '@awesome-cordova-plugins/file/ngx';\nimport { buffer, concatMap } from 'rxjs/operators';\nimport { fromEventPattern, interval, Observable, Subscription } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\nconst targetLogLevel = environment.production ? LogLevel.DEBUG : LogLevel.VERBOSE;\n\ngetPrimaryLoggerTransport()\n  .setFilter(ev => ev.level >= targetLogLevel)\n  .setDefaultBroadcastEnabled(!environment.production);\n\nfunction compareLastModifiedTime(a: CordovaFileEntryApi, b: CordovaFileEntryApi): number {\n  return a.getLastModificationTime() - b.getLastModificationTime();\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\n  /**\n   * This is for logging information ! TODO:\n   */\nexport class LoggingService implements OnDestroy {\n\n   logger\nfilestream: RotatingFileStream<CordovaFileEntryApi>\n\n  private  fileStream: RotatingFileStream<CordovaFileEntryApi> = new RotatingFileStream({\n    maxFileSize: 2e6, // 2MB\n    files: CordovaFileEntryApi.createCacheRotationFiles(\n      this.cdvFile,\n      \"log\",\n      ['debuga.log', 'debugb.log']\n    )\n  });\n  start() {\n\n\n    this.logger = new Logger('LogManagerService');\n    \n    this.fileStream = new RotatingFileStream({\n      maxFileSize: 2e6, // 2MB\n      files: CordovaFileEntryApi.createCacheRotationFiles(\n        this.cdvFile,\n        this.cdvFile.externalApplicationStorageDirectory,\n        ['debug-a.log', 'debug-b.log']\n      )\n    });\n    this.cdvFile.writeFile(this.cdvFile.externalApplicationStorageDirectory,\n      \"logmanager.log\", \"\", { replace: true })\n      .then((data) => {\n        console.log(\"successful\", data)\n      }, (error) => {\n        console.error(\"saving file cordova\", error)\n      })\n    \n\n\n    \n  }\n\n  private mFileStreamSub: Subscription | undefined;\n\n  constructor(\n    private  platform: Platform,\n    // private readonly socialSharing: SocialSharing,\n    private cdvFile: File,\n  ) {\n   /*  try {\n      console.log(\"---------------------------------------------\")\n       this.platform.ready().then(() => {\n        // this.cdvFile.ready\n        \n        console.log(\"directory\", this.cdvFile.applicationStorageDirectory);\n        this.start();\n        this.cdvFile.writeFile(this.cdvFile.externalApplicationStorageDirectory,\n          \"debuga.log\", \"\", { replace: true })\n          .then((data) => {\n            console.log(\"successfuldebuga\", data)\n          }, (error) => {\n            console.error(\"saving file cordova\", error)\n          })\n        this.cdvFile.writeFile(this.cdvFile.externalApplicationStorageDirectory,\n          \"debugb.log\", \"\", { replace: true })\n          .then((data) => {\n            console.log(\"successfuldebugb\", data)\n          }, (error) => {\n            console.error(\"saving file cordova\", error)\n          })\n      })\n      \n    } catch (error) {\n      console.error(\"dir\",this.cdvFile.applicationStorageDirectory)\n    } */\n\n  }\n\n  public ngOnDestroy(): void {\n    this.clearFileStreamSub();\n\n  }\n\n  private clearFileStreamSub(): void {\n    // We don't really care if this doesn't work, since the only two ways this will explode are:\n    // 1. there is no assigned subscription instance\n    // 2. the subscription instance is already unsubscribed\n    try { this.mFileStreamSub?.unsubscribe(); } catch { }\n  }\n\n  // Example for sharing log files via the share plugin\n  /* public async shareLogsViaEmail(): Promise<void> {\n\n    this.logger.debug('shareLogsViaEmail()');\n    const files = await this.fileStream.refreshAllEntries();\n    const logFilePaths = files.map(file => file.toURL());\n    this.logger.debug('opening email with file attachments: ', logFilePaths);\n\n    await this.socialSharing.share(\n      'New App Logs Attached',\n      '[' + environment.appId + '] App Logs',\n      logFilePaths\n    );\n  } */\n\n  // Example for smashing log files together to be uploaded somewhere\n  public async combineLogs(): Promise<string> {\n\n    this.logger.debug('combineLogs()');\n    const files = (await this.fileStream.refreshAllEntries()).sort(compareLastModifiedTime);\n    let result = '';\n\n    for (const file of files) {\n      const buffer = await file.read();\n      const text = new TextDecoder().decode(buffer);\n      result += `\\n__FILE_BREAK__---------- ${file.getFileName()} ----------__FILE_BREAK__\\n`;\n      result += text;\n    }\n\n    return result;\n  }\n\n  public async initialize(): Promise<void> {\n    this.platform.ready().then(() => {\n\n    this.logger.debug('initialize()');\n\n    if (!this.platform.is('cordova')) {\n      return;\n    }\n\n    this.clearFileStreamSub();\n\n    this.mFileStreamSub = getPrimaryLoggerTransport()\n      .events()\n      .asObservable<Observable<LogEvent>>(fromEventPattern)\n      .pipe(\n\n        // Accumulate log events for 5 seconds\n        buffer(interval(5000)),\n\n        // NOTE: typically we would do event handling in the subscribe block,\n        // but we can only write to files one-at-a-time, so we put the actual subscribe logic in concatMap() instead.\n        concatMap(events => this.saveLogEvents(events).catch(e => {\n          this.logger.fatal('log file write FATAL: ', e);\n        }))\n\n        // Activate this subscription to start recieving events.\n      ).subscribe();\n      \n    })\n\n  }\n\n  private async saveLogEvents(events: LogEvent[]): Promise<void> {\n    this.logger.verbose(\"savingfile\"+ this.cdvFile)\n\n    // Don't do anything if there are no new events\n    if (!events || events.length <= 0) {\n      return;\n    }\n\n    // Combine the buffered events to a string payload\n    // (need to tack on a newline at the end since join doesn't do that)\n    const outputText = `${events.map(stringifyLogEvent).join('\\n')}\\n`;\n\n    // Encode the string as an ArrayBuffer\n    const outputBuffer = new TextEncoder().encode(outputText).buffer;\n\n    // Write the encoded content to the RotatingFileStream instance.\n    // NOTE: the stream will handle file swapping in the background, so we don't have to handle that part directly.\n    await this.fileStream.write(outputBuffer).then((res) => {\n      console.warn(\"filewritten\", res)\n    }, (error) => {\n      console.error(\"saving filestream\", error)\n    })\n\n\n  /*   this.cdvFile.writeFile(this.cdvFile.externalApplicationStorageDirectory,\n      \"logmanager.log\", outputBuffer, { append: true })\n      .then((data) => {\n        console.log(\"successful\", data)\n      }, (error) => {\n        console.error(\"saving file cordova\", error)\n      }) */\n    \n    // await this.fileStream.rea\n    \n  }\n}","import { Injectable } from \"@angular/core\";\nimport { Vibration } from \"@awesome-cordova-plugins/vibration/ngx\";\nimport { ToastController } from \"@ionic/angular\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { AlertControlService } from \"../alertControl/alert-control.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OutputControllerService {\nprivate checkpointalert= new BehaviorSubject<any>('undefined')\n\n  _cast_checkpoint_alert = this.checkpointalert.asObservable()\nprivate swarmalert= new BehaviorSubject<any>('undefined')\n\n  _cast_swarm_alert = this.swarmalert.asObservable()\n  \n  /**\n   * This service will provide hard coded outhandler for all the outputs for example : join swarm , create swarm , left swarm , and for the alerts for checkpoint\n   */\n  // TODO : set priority of the alerts as in destination reached priority 1, swarm information priority 2 , navigation information priority 3\n\n  toasts = [];\n  alerts = [];\n  constructor(\n    public alertService: AlertControlService,\n    private vibration: Vibration,\n    private toastCtrl: ToastController\n  ) {}\n\n  /**\n   * ! swarm events -> bottom part swarm information as toast\n   * category 3\n   * Join swarm :\n   * Leave swarm :\n   * someone joined swarm :\n   * someone left the swarm :\n   *\n   * ! checkpoint alerts -> screen middle to show the information for alerts\n   * meetcheckpointAlert :  category 1\n   * leavecheckpointAlert: category 1\n   * innercheckpointAlert: category 2\n   * destinationReached : category 3\n   *\n   * ! Navigation information -> top bar reserved to show navigational information\n   * category 1\n   * navigationalInformation: category 1\n   */\n\n  /**\n   *  main goal of the function is to manage the multiple alerts happening within the occurence of one\n   * @depreceated As alerts and toast control has been removed ferom the app \n   * @param header header for the alert message\n   * @param message message to show\n   * @param button buttons availabel\n   * @param duration duration for which the alert should be shown\n   */\n\n  alertManager(header, message, button, duration, category?) {\n    // add alert in the stack\n    let alertObj = {\n      header: header,\n      message: message,\n      button: button,\n      duration: duration,\n      id: category,\n    };\n    this.alerts.push(alertObj);\n    // sort the array on their priority\n    this.alerts.sort((data, data2) => {\n      if (data.id > data2.id) {\n        return 1;\n      } else if (data.id < data2.id) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n    setTimeout(() => {\n      this.alertService.getAlert().then((data: any) => {\n        let obj = this.alerts.pop();\n        // no alert present\n        if (data == undefined) {\n          console.log(\"No current alert present\");\n          this.alertService.generateAlert(\n            obj.header,\n            obj.message,\n            obj.button,\n            obj.duration,\n            obj.id\n          );\n        } else if (data.id > obj.id) {\n          //  lower priority alerts \n          // then dont show the alert \n          console.log(\"NO NEED TO DIMISS OR SHOW THE INFO\")\n\n        } else if (data.id < obj.id) {\n          // High priority alert\n          // dismiss the alert\n          this.alertService.alertDismiss().then((result) => {\n            if (result) {\n              // empty the alert list \n              this.alerts = []\n              // create new alert \n              this.alertService.generateAlert(obj.header, obj.message, obj.button, obj.duration, obj.id)\n              \n            } else {\n              console.error(\"NOT able to delet the top overlay\")\n            }\n          }, (error) => {\n            console.error(\"Unable to call Dismiss on alert \")\n          });\n          // create the new alert \n        } else if (data.id == obj.id) {\n          \n          \n          // same priority alerts\n          // show the updated alert or the newest one\n          // dismiss the old alert\n          this.alertService.alertDismiss().then((result) => {\n            if (result) {\n              // empty the alert list \n              this.alerts =[]\n              // create the new alert\n              this.alertService.generateAlert(obj.header, obj.message, obj.button, obj.duration, obj.id)\n              \n            } else {\n              console.log(\"NOT able to delete the top overlay\")\n            }\n          }, (error) => {\n            console.error(\"Unable to call Dismiss on alert \", error)\n          });\n          \n        }\n\n      });\n    }, 200);\n\n    // this.alertService.getAlert()\n  }\n\n  /**\n   *\n   * @param e it is a kind of event which occured\n   * @param alertMessage it is a custom message for user to be shown on the screen\n   */\n  genereateOutput(e: string, alertMessage?: string) {\n    switch (e) {\n      // events joining swarm\n      // for creating swarm from events\n\n      case \"joinSwarm\": {\n        this.alertManager_swarm(\"You joined the swarm\",5000);\n        this.vibration.vibrate([2000, 1000, 2000]);\n\n        break;\n      }\n      // Someone joined the swarm\n      case \"userJoinedSwarm\": {\n        this.alertManager_swarm(\"Someone joined swarm\",5000);\n\n        this.vibration.vibrate([1000]);\n        break;\n      }\n      // events leave swarm\n      case \"leaveSwarm\": {\n        this.alertManager_swarm(\"You left the swarm\",5000);\n        this.vibration.vibrate([4000]);\n\n        break;\n      }\n      case \"userLeftSwarm\": {\n        this.alertManager_swarm(\"Someone left the swarm \",5000);\n        this.vibration.vibrate([4000]);\n        break;\n      }\n      // checkpoint alert or all the navigational alerts cases will be specified here\n      case \"meetcheckpointAlert\": {\n        /* this.alertManager(\n          \"Checkpoint alert\",\n          alertMessage,\n          \"OK\",\n          5000,\n          1\n        ); */\n\n        this.alertManager_checkpoint(alertMessage, 5000)\n        break;\n      }\n      case \"leavecheckpointAlert\": {\n        /* this.alertManager(\n          \"Checkpoint alert\",\n          alertMessage,\n          \"OK\",\n          5000,\n          1\n        ); */\n        this.alertManager_checkpoint(alertMessage, 5000)\n\n        break;\n      }\n      // destination alert\n      case \"destinationReached\": {\n        /* this.alertManager(\n          \"Destination Alert\",\n          alertMessage,\n          \"OK\",\n          5000,\n          3\n        ); */\n        this.alertManager_checkpoint(alertMessage, 5000)\n        break;\n      }\n      // inner geofence reached for both leave and meet checkpoint\n      case \"innercheckpointAlert\": {\n        /* this.alertManager(\n          \"Checkpoint Alert\",\n          alertMessage,\n          \"OK\",\n          5000,\n          2\n        ); */\n        this.alertManager_checkpoint(alertMessage, 5000)\n        this.vibration.vibrate([3000]);\n        break;\n      }\n      case \"navigationalInformation\": {\n        // here the navigational information will be added\n\n        break;\n      }\n      default: {\n        //statements;\n\n        console.error(\"No specified output found for the string \", e);\n        break;\n      }\n    }\n  }\n\n\n  alertManager_checkpoint(alertmessage: string, timeToDisplay) {\n    \n    this.checkpointalert.next(alertmessage);\n    setTimeout(() => {\n      this.checkpointalert.next(\"undefined\")\n      \n    }, (timeToDisplay));\n    \n  }\n  alertManager_swarm(alertmessage: string, timeToDisplay) {\n    \n    this.swarmalert.next(alertmessage);\n    setTimeout(() => {\n      this.swarmalert.next(\"undefined\")\n      \n    }, (timeToDisplay));\n    \n  }\n/**\n * \n * \n * @param msg message to be shown\n * @param color color of the toast\n * @param duration display time \n */\n  generateToast(msg, color?, duration?) {\n    console.log(\"from toast\", msg);\n    const toast = {\n      message: msg,\n      color: color || \"dark\",\n      duration: duration || 5000,\n    };\n    this.toasts.push(toast);\n    const timeout = (this.toasts.length - 1) * toast.duration;\n    this.show(timeout);\n  }\n  show(timeout) {\n    setTimeout(\n      async () => {\n        const toast = await this.toastCtrl.create(this.toasts[0]);\n        await toast.present();\n        this.toasts.splice(0, 1);\n      },\n      timeout > 0 ? timeout + 800 : 0\n    );\n  }\n\n  /*  \n  // focussed more on wearbale  \n  ! important for wearable\n  \n  add_in_priority(message: string, priority:number) {\n    if (priority <= 1.9) {\n      this.HighPriority.push(message)\n      \n      \n    } else if (priority >= 2 && priority <= 2.9) {\n      this.MediumPriority.push(message)\n      \n    } else {\n      // everything with priority <= 3\n      \n      this.LowPriority.push(message)\n    }\n\n    // subscribe to the main thread \n    if (this.HighPriority.length != 0) {\n      // remove all other information from other priorities\n      this.clearAll(this.MediumPriority);\n      this.clearAll(this.LowPriority)\n\n    }\n\n\n  } \n  // it helps to create one signal from all the above priority lists  and updates the mainThread content \n   generateOneSignal() {\n    let currentPriority = this.MainThread.contentPriority\n    let HighestPriority: number;\n    let HighestPriorityContent :string\n    if (this.HighPriority.length != 0) {\n      HighestPriority = 1\n      HighestPriorityContent = this.HighPriority.pop()\n    } else if (this.MediumPriority.length != 0) {\n      HighestPriority = 2\n      HighestPriorityContent = this.MediumPriority.pop()\n    } else if (this.LowPriority.length != 0) {\n      HighestPriority = 3\n      HighestPriorityContent = this.LowPriority.pop()\n    } else {\n      HighestPriority = 0\n      HighestPriorityContent = ''\n    }\n// when current priority is higer priority than the new event\n    if (currentPriority < HighestPriority) {\n      // wait for the current content to finish \n      if (currentPriority ==1 ) {\n        // remove all other information from other priorities\n        this.clearAll(this.MediumPriority);\n        this.clearAll(this.LowPriority)\n        this.MainThread.content = HighestPriorityContent\n        this.MainThread.contentPriority = HighestPriority\n        this.MainThread.stack.splice(0,this.MainThread.stack.length-1)\n  \n      } else if (currentPriority == 2) {\n        // we dont haver to clear lowpriority array as after finishing medium priority we have to continue with low priority\n        this.MainThread.content = HighestPriorityContent;\n        this.MainThread.contentPriority = HighestPriority;\n        this.MainThread.stack.push(this.MainThread) // to generate output later \n      }\n\n\n\n    } else if (currentPriority > HighestPriority) {\n      if (HighestPriority == 0) {\n        this.clearAll(this.HighPriority)\n        this.clearAll(this.MediumPriority)\n        this.clearAll(this.LowPriority)\n      } else if (HighestPriority == 1) {\n        this.clearAll(this.MediumPriority);\n        this.clearAll(this.LowPriority)\n        this.MainThread.content = HighestPriorityContent\n        this.MainThread.contentPriority = HighestPriority\n        this.MainThread.stack.splice(0,this.MainThread.stack.length-1)\n        \n      } else if (HighestPriority == 2) {\n        this.MainThread.stack.push(this.MainThread) // as it is the lowest priority events\n        this.MainThread.content = HighestPriorityContent;\n        this.MainThread.contentPriority = HighestPriority;\n        \n      }\n      \n    } else if (currentPriority == HighestPriority) {\n      // update the content \n      this.MainThread.content = HighestPriorityContent\n      if (HighestPriority == 1) {\n        this.clearAll(this.HighPriority)\n        this.clearAll(this.MediumPriority);\n      this.clearAll(this.LowPriority)\n        \n      } else if (HighestPriority == 2) {\n        this.clearAll(this.MediumPriority)\n      } else if (HighestPriority == 3) {\n        this.clearAll(this.LowPriority)\n        this.MainThread.stack.splice(0,this.MainThread.stack.length-1)\n      }\n\n\n    }\n\n    this.sendSignal(this.MainThread.content)\n  } */\n\n  /* \n  clearAll(arr: any[]) {\n    let lastIndex = arr.length-1\n    arr.splice(0, lastIndex);\n  }\n  sendSignal(signal) {\n    console.log(\"sending signal to the wearable \", signal)\n\n    \n  } */\n}\n","import { Injectable, Inject } from \"@angular/core\";\nimport { HttpClient, HttpParams, HttpHeaders } from \"@angular/common/http\";\nimport { AlertController } from \"@ionic/angular\";\nimport { SplashScreen } from \"@awesome-cordova-plugins/splash-screen/ngx\";\nimport { Router } from \"@angular/router\";\nimport { PostUserBody } from \"src/app/interface/post-user-body\";\nimport { PostUserResponse } from \"src/app/interface/post-user-response\";\nimport { TripProposalBody } from \"src/app/interface/trip-proposal-body\";\nimport { TripProposalResponse } from \"src/app/interface/trip-proposal-response\";\nimport { GetTripIntersecionsResponse } from \"src/app/interface/get-trip-intersecions-response\";\nimport { GetTripsResponse } from \"src/app/interface/get-trips-response\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RestApiService {\n  /*******************************\n   * Configuration Settings\n   */\n\n  // the backend API base address\n  apiUrl: string = \"https://smartmobility.dfki.de/bikerider\";\n  // the Google API key\n  mykey: string = \"AIzaSyD6DzItwWYKNk_8dPP4CAt6yzz5gi8A-EU\";\n  //google map autocomplete URL\n  url: string = \"https://maps.googleapis.com/maps/api/place/autocomplete/json\";\n  // the geocoding URL\n  urlGeocode: string = \"https://maps.googleapis.com/maps/api/geocode/json\";\n  swarmUrl: string =\n    \"https://virtserver.swaggerhub.com/dfki_smartmobility/Open_Source_Mobility_Backend/1.1.0\";\n  osrmUrl: string = \"http://router.project-osrm.org/route/v1/bike/\";\n\n  //apiUrl: string ='https://virtserver.swaggerhub.com/patrick.jattke/Open_Source_Mobility_Backend/1.0.0' ;\n  /*******************************\n   * Attributes\n   */\n\n  // the temporary identifier generated in the backend\n  userId: string;\n\n  // fcm token id\n\n  fcmToken: string;\n\n  // the user's device identifier (e.g., Android ID)\n  deviceId: string;\n\n  // the ID of the user's active trip\n  activeTripId: string;\n  test: any[] = [];\n\n  // generating swarmId for the user to be used\n  swarmId: string = null;\n\n  // to get the app offline with certain data feed\n  // ! offline\n  offline: boolean = false;\n\n  /*******************************\n   * CLASS CONSTRUCTOR\n   */\n  constructor(\n    public http: HttpClient,\n    @Inject(AlertController) private alerts: AlertController,\n    @Inject(SplashScreen) public splashScreen: SplashScreen,\n    private router: Router\n  ) {}\n\n  /******************************\n   * API FUNCTIONS\n   */\n\n  //-------------------------------------user API start-----------------------------------------------\n\n  /**\n   * `POST /users`\n   * generate a backend user ID for the given device ID\n   * and FCM token for the given user ID\n   * @returns {BackendUserID}\n   */\n\n  //\n  getUserIdentifier(deviceId: string, fcmToken: string) {\n    console.log(deviceId, fcmToken);\n    this.deviceId = deviceId;\n    this.fcmToken = fcmToken;\n    return new Promise((resolve) => {\n      const options = {\n        headers: new HttpHeaders(),\n      };\n      var requestBody: PostUserBody = {\n        device_id: this.deviceId,\n        fcm_token: fcmToken,\n      };\n      console.log(\"users device ID:\", this.deviceId);\n      this.http.post(this.apiUrl + \"/users\", requestBody, options).subscribe(\n        (data: PostUserResponse) => {\n          this.userId = data[\"user_id\"];\n          console.log(\"[REST] getUserIdentifier :\", data[\"user_id\"]);\n          resolve(data);\n        },\n        async (err) => {\n          console.error(\"Server not responding\");\n          console.error(\"post/users Error generating user ID\");\n          await this.handleError(err);\n        }\n      );\n    });\n  }\n  /**\n   * @param tripid if specified returns all the users with the same tripintersection\n   *\n   * if tripid not specified , all active users will be returned\n   *\n   */\n\n  /**\n   * @deprecated\n   * @param tripid\n   * @returns\n   */\n  getUsersPositions(tripid) {\n    return new Promise((resolve) => {\n      const options = {\n        headers: new HttpHeaders().set(\"APP-USER-ID\", this.userId),\n        params: new HttpParams().set(\"intersecting_trip_id\", tripid),\n      };\n      console.log(\"[rest-api] getuserposition\");\n      this.http.get(this.apiUrl + \"/users\", options).subscribe(\n        (data) => {\n          resolve(data);\n          console.log(\"getusersPosition data called from rest api \", data);\n        },\n        (err) => console.log(\"[rest-api] no users found\", err)\n      );\n    });\n  }\n\n  // ---------------------------------------------user API end-------------------------------------------------------\n\n  // ---------------------------------------------Swarm API start-------------------------------------------------------\n  /**\n   * `Get /swarm`\n   *\n   * Create a new temporary Swarm Id for the user\n   *\n   * @param deviceId the (secret) device ID of the user's device, used as a kind of identifier in the app\n   */\n\n  getSwarmData(swarmid: string) {\n    return new Promise((resolve) => {\n      const options = {\n        headers: new HttpHeaders().set(\"APP-USER-ID\", this.userId),\n      };\n      this.http\n        .get(`${this.apiUrl}/swarms/${swarmid}`, options)\n        .subscribe((data) => {\n          resolve(data);\n          console.log(\"[rest-api] gettSwarmData\", data);\n        });\n    });\n  }\n\n  postSwarm(devicelist_array, swarmID: string) {\n    return new Promise((resolve) => {\n      const options = {\n        headers: new HttpHeaders().set(\"APP-USER-ID\", this.userId),\n      };\n      var requestBody = {\n        swarm_id: swarmID,\n        active_members: devicelist_array,\n      };\n      console.log(\n        \"users device ID:\",\n        this.deviceId,\n        \"request body \",\n        requestBody\n      );\n      this.http.post(this.apiUrl + \"/swarms\", requestBody, options).subscribe(\n        (data) => {\n          console.log(\"[REST] POST/swarm data for created swarm  :\", data);\n          resolve(data);\n        },\n        (err) => {\n          console.error(\"error POST/Swarm \", err);\n        }\n      );\n    });\n  }\n  /**\n   *\n   * @param DeviceID_array\n   * @returns {void} as it updates the swarm information\n   */\n  updateSwarm(DeviceID_array, swarmId) {\n    return new Promise((resolve) => {\n      const options = {\n        headers: new HttpHeaders().set(\"APP_USER_ID\", this.userId),\n        // params: new HttpParams().set(\"swarm_id\", this.swarmId),\n      };\n      var requestBody = {\n        active_members: DeviceID_array,\n      };\n      console.log(requestBody);\n      this.http\n        .put(`${this.apiUrl}/swarms/${swarmId}`, requestBody, options)\n        .subscribe((data) => {\n          resolve(data);\n          console.log(\"[rest-api]update swarm in rest\", data);\n        });\n    });\n  }\n\n  deleteSwarm(swarmid) {\n    return new Promise((resolve) => {\n      const options = {\n        headers: new HttpHeaders().set(\"APP_USER_ID\", this.userId),\n      };\n\n      this.http\n        .delete(`${this.apiUrl}/swarms/${swarmid}`, options)\n        .subscribe((data) => {\n          resolve(data);\n          console.log(\"[rest-api] deleteswarm in rest\", data);\n        });\n    });\n  }\n  /**\n   * @deprecated not in use anymore with new implementation API 1.1.1\n   * @alternative put/TRIPs\n   * `PUT /users/{device_id}`\n   *\n   * @param currentPosition the user's current position expressed as geo coordinate (latitude, longitude)\n   * @param destinationReachedFlag indicates whether the user reached the destination\n   * @param abortedFlag indicates whether the user actively cancelled the trip\n   * @param speed speed of the user using GPS coordinates\n   */\n\n  updateUser(\n    currentPosition: any,\n    activeTripId,\n    destinationReachedFlag: boolean,\n    abortedFlag: boolean,\n    speed: number\n  ) {\n    return new Promise((resolve) => {\n      resolve(\"succesful\");\n      if (\n        speed == null ||\n        speed == undefined ||\n        speed < 0 ||\n        Number.isNaN(speed)\n      ) {\n        speed = 0;\n      }\n      const options = {\n        headers: new HttpHeaders().set(\"APP-USER-ID\", this.userId),\n        params: new HttpParams().set(\"device_id\", this.deviceId),\n      };\n      var requestBody = {\n        position: currentPosition,\n        position_timestamp: new Date().toISOString(),\n        active_trip_id: activeTripId,\n        speed: speed,\n        destination_reached: destinationReachedFlag,\n        aborted: abortedFlag,\n      };\n      this.http\n        .put(`${this.apiUrl}/users/${this.deviceId}`, requestBody, options)\n        .subscribe(\n          (data) => {\n            // console.log(\"[rest-api] update user called\", data);\n            resolve(data);\n          },\n          (error) => {\n            console.log(\"[rest-api] updateUser error:\", error);\n          }\n        );\n    });\n  }\n\n  /**\n   *\n   * @param current_position current position of the user\n   * @param trip_id trip id for the current trip\n   * @param destination_reached if destination reached or nopt\n   * @param aborted if aborted the trip in between\n   * @param page at which page the call has been provided\n   * @debug option for the page call\n   * @param speed speed of the user at which the user is riding\n   * @returns\n   */\n\n  Swarmupdate_trip(\n    current_position: any,\n    trip_id: string,\n    destination_reached: boolean,\n    aborted: boolean,\n    speed: number,\n    page?: string\n  ) {\n    return new Promise((resolve) => {\n      const options = {\n        headers: new HttpHeaders().set(\"APP-USER-ID\", this.userId),\n      };\n\n      const requestBody = {\n        position: {\n          lng: current_position.lng,\n          lat: current_position.lat,\n        },\n        position_timestamp: new Date().toISOString(),\n        active_trip_id: trip_id,\n        speed: speed,\n        destination_reached: destination_reached,\n        aborted: aborted,\n      };\n      console.log(\n        \"[rest-api] update-trip called for request to update the trip from page :\",\n        page\n      );\n\n      this.http\n        .put(`${this.apiUrl}/users/${this.deviceId}`, requestBody, options)\n        .subscribe(\n          (data) => {\n            resolve(\"deleteXX\");\n          },\n          (error) => {\n            console.log(\"[rest-api] update_trip error:\", error);\n          }\n        );\n    });\n  }\n\n  /**\n   * `PUT /users/{device_id}`\n   *\n   * Update the status of an user, this includes\n   * -\n   *  user's position and the corresponding position timestamp,\n   * - a user's ongoing trip indicated by the active_trip_id,\n   * - a flag destination_reached that indicates whether the user reached its destination,\n   * - a flag aborted that indicates whether the user (actively) cancelled a trip.\n   *@deprecated with new API 1.1.1\n   * @param currentPosition the user's current position expressed as geo coordinate (latitude, longitude)\n   * @param destinationReachedFlag indicates whether the user reached the destination\n   * @param abortedFlag indicates whether the user actively cancelled the trip\n   */\n  /*   updateUser(\n    currentPosition: any,\n    activeTripId,\n    destinationReachedFlag: boolean,\n    abortedFlag: boolean\n  ) {\n    // TODO: test this method as it has not been tested yet!\n    return new Promise((resolve) => {\n      const options = {\n        headers: new HttpHeaders().set(\"APP-USER-ID\", this.userId),\n        params: new HttpParams().set(\"device_id\", this.deviceId),\n      };\n      var requestBody = {\n        position: currentPosition,\n        position_timestamp: new Date().toISOString(),\n        active_trip_id: activeTripId,\n        destination_reached: destinationReachedFlag,\n        aborted: abortedFlag,\n      };\n      this.http\n        .put(`${this.apiUrl}/users/${this.deviceId}`, requestBody, options)\n        .subscribe(\n          (data) => {\n            // console.log(\"[rest-api] update user called\", data);\n            resolve(data);\n          },\n          (error) => {\n            console.log(\"[rest-api] updateUser error:\", error);\n          }\n        );\n    });\n  }\n */\n\n  /**\n   * `POST /trip_proposals`\n   * Returns a trip proposal, including its intersections with all active trips.\n   *\n   * @param fromPosition the start position of the user's trip\n   * @param toPosition the end position of the user's trip\n   * @param intersections a flag describing whether the API should return route intersections with other users\n   */\n\n  // -----------------------------------------Tripproposals API start----------------------------------\n\n  getTripProposal(\n    fromPosition: any,\n    toPosition: any,\n    intersections: boolean = true\n  ): any {\n    console.log(\n      \"[rest-api] get trip proposal request started :with intersection turned :\",\n      intersections\n    );\n    return new Promise((resolve) => {\n      const options = {\n        headers: new HttpHeaders().set(\"APP-USER-ID\", this.userId),\n        params: new HttpParams().set(\"intersections\", intersections.toString()),\n      };\n\n      var requestBody: TripProposalBody = {\n        start_point: { lng: fromPosition.lng, lat: fromPosition.lat },\n        end_point: { lng: toPosition.lng, lat: toPosition.lat },\n      };\n\n      this.http\n        .post(`${this.apiUrl}/trip_proposals`, requestBody, options)\n        .subscribe(\n          (data: TripProposalResponse) => {\n            resolve(data);\n            console.log(\"REST_provider get trip proposal data \", data);\n            console.log(\n              \"REST_provider get trip proposal data \",\n              JSON.stringify(data)\n            );\n          },\n          (err) => {\n            console.log(\"ERROR in gettripproposal rest-api\", err);\n            this.handleError(err);\n            this.router.navigateByUrl(\"/home\").then(\n              (suc) => {\n                console.log(suc);\n              },\n              (error) => {\n                console.error(error);\n              }\n            );\n            this.splashScreen.show();\n            window.location.reload();\n          }\n        );\n    });\n  }\n\n  /**\n   * `GET /trips`\n   *\n   * Returns a trip's detailed route for a trip of an given user, identified by its user ID.\n   *\n   * @param foreignTripId the user ID of the user whose trip data should be returned\n   */\n\n  // ---------------------Trips API calls -------------------------------\n  /**\n   * ! GET/ trips\n   * @param foreignTripId\n   * @param user\n   * @returns\n   */\n  getTrips(foreignTripId: string): Promise<GetTripsResponse> {\n    console.log(\"REST gettrips\");\n    return new Promise((resolve) => {\n      const options = {\n        headers: new HttpHeaders().set(\"APP-USER-ID\", this.userId),\n        params: new HttpParams().set(\"trip_id\", foreignTripId),\n      };\n\n      this.http.get(`${this.apiUrl}/trips`, options).subscribe(\n        (data: GetTripsResponse) => {\n          resolve(data);\n          console.log(\"REST get trips \", data);\n        },\n        (err) => {\n          console.error(\"REST Get/Trips\", err);\n        }\n      );\n    });\n  }\n\n  putTrips(foreignTripId: string, status: string) {\n    if (this.offline) {\n      return new Promise((resolve) => {\n        let result = {\n          status: \"inactive\",\n        };\n        resolve(result);\n      });\n    } else {\n      return new Promise((resolve) => {\n        const options = {\n          headers: new HttpHeaders().set(\"APP-USER-ID\", this.userId),\n        };\n        let validStatus = [\n          \"active\",\n          \"inactive\",\n          \"null\",\n          \"aborted\",\n          \"completed\",\n        ];\n        var requestBody = {\n          status: status,\n        };\n        // checking if the parameter is passed correctly\n\n        if (!validStatus.includes(status)) {\n          console.error(\"ERROR invalid status value\");\n        }\n\n        // resolve(\"trip updated\")\n        this.http\n          .put(`${this.apiUrl}/trips/${foreignTripId}`, requestBody, options)\n          .subscribe(\n            (data) => {\n              console.log(\"[rest-api] put trips\", data);\n              resolve(data);\n            },\n            (error) => {\n              console.log(\"[rest-api] Put trips:\", error);\n            }\n          );\n      });\n    }\n  }\n\n  // -------------------------------------Trips end-------------------------------------------\n\n  // ------------------------------------- User locations API start-------------------------------------------\n\n  // POST/userlocations\n\n  postUserlocation(\n    tripid: string,\n    userdeviceID: string,\n    currentPosition: any,\n    speed: number\n  ) {\n    return new Promise((resolve) => {\n      if (\n        speed == null ||\n        speed == undefined ||\n        speed < 0 ||\n        Number.isNaN(speed)\n      ) {\n        speed = 0;\n      }\n      const options = {\n        headers: new HttpHeaders().set(\"APP-USER-ID\", this.userId),\n        // params: new HttpParams().set(\"device_id\", userdeviceID).set(\"trip_id\", tripid),\n      };\n      var requestBody = {\n        device_id: this.deviceId,\n        trip_id: tripid,\n        position: currentPosition,\n        position_timestamp: new Date().toISOString(),\n        speed: speed,\n      };\n      console.log(\"[rest-api] getuserposition\");\n      this.http\n        .post(this.apiUrl + \"/userlocations\", requestBody, options)\n        .subscribe(\n          (data) => {\n            resolve(data);\n            console.log(\"[rest-api] update user data \", data);\n          },\n          (err) => console.log(\"[rest-api] error post/userlocation\", err)\n        );\n    });\n  }\n\n  //GET/Userlocations\n  getUserlocation(tripId: string, deviceId?: string) {\n    if (this.offline) {\n      return new Promise((resolve) => {\n        resolve(\"updated\");\n      });\n    } else {\n      return new Promise((resolve) => {\n        const options = {\n          headers: new HttpHeaders().set(\"APP-USER-ID\", this.userId),\n          params: new HttpParams()\n            .set(\"device_id\", deviceId)\n            .set(\"trip_id\", tripId),\n        };\n        this.http.get(`${this.apiUrl}/userlocations/`, options).subscribe(\n          (data) => {\n            // console.log(\"[rest-api] update user called\", data);\n            resolve(data);\n          },\n          (error) => {\n            console.log(\"[rest-api] userlocation error:\", error);\n          }\n        );\n      });\n    }\n  }\n\n  // -------------------------------------user locations end-------------------------------------------\n\n  // -------------------------------------Trip intersections API start-------------------------------------------\n\n  getTripintersection(\n    trip_intersection_id: string,\n    eager: boolean\n  ): Promise<GetTripIntersecionsResponse> {\n    return new Promise((resolve) => {\n      console.log(\"inside trip intersection trip id\", trip_intersection_id);\n\n      const options = {\n        headers: new HttpHeaders().set(\"APP-USER-ID\", this.userId),\n        params: new HttpParams().set(\"eager\", eager.toString()),\n      };\n      this.http\n        .get(\n          `${this.apiUrl}/tripintersections/${trip_intersection_id}`,\n          options\n        )\n        .subscribe(\n          (data: GetTripIntersecionsResponse) => {\n            console.log(\"[rest-api] GET/tripIntersection\", data);\n            resolve(data);\n          },\n          (error) => {\n            console.log(\"[rest-api] tripintersection error:\", error);\n          }\n        );\n    });\n  }\n\n  // -------------------------------------Trip intersections end-------------------------------------------\n\n  getAdresses(input) {\n    return new Promise((resolve) => {\n      const options = {\n        params: new HttpParams()\n          .set(\"input\", input)\n          .set(\"key\", this.mykey)\n          // .set(\"types\",\"geocode\")\n          .set(\"components\", \"country:de\")\n          .set(\"strictbounds\", \"\")\n          .set(\"location\", \"52.49161311310171,13.330621719360353\")\n          .set(\"radius\", \"50000\"),\n      };\n      this.http.get(this.url, options).subscribe(\n        (data) => {\n          resolve(data);\n          console.log(data);\n        },\n        (err) => this.handleError(err)\n      );\n    });\n  }\n  getadressgeocode(input) {\n    return new Promise((resolve) => {\n      const options = {\n        params: new HttpParams().set(\"address\", input).set(\"key\", this.mykey),\n      };\n      this.http.get(this.urlGeocode, options).subscribe(\n        (data) => {\n          resolve(data);\n        },\n        (err) => this.handleError(err)\n      );\n    });\n  }\n\n  /**\n   * ! changes have been made according to the new API 1.1.1\n   * TODO: not tested \n   * \n   * @param user\n   * @param device\n   * @param currentPosition\n   * @param activeTripId\n   * @param destinationReachedFlag\n   * @param abortedFlag\n   * @param speed\n   * @returns\n   */\n  updateUser_ghostUser(\n    user,\n    device,\n    currentPosition: any,\n    activeTripId,\n    destinationReachedFlag: boolean,\n    abortedFlag: boolean,\n    speed: number\n  ) {\n    // TODO: test this method as it has not been tested yet!\n    return new Promise((resolve) => {\n      const options = {\n        headers: new HttpHeaders().set(\"APP-USER-ID\", user),\n        params: new HttpParams().set(\"device_id\", device),\n      };\n      if (\n        speed == null ||\n        speed == undefined ||\n        speed < 0 ||\n        Number.isNaN(speed)\n      ) {\n        console.error(\"speed\", speed);\n        speed = 0;\n      }\n      var requestBody = {\n        position: currentPosition,\n        position_timestamp: new Date().toISOString(),\n        active_trip_id: activeTripId,\n        speed: speed,\n        destination_reached: destinationReachedFlag,\n        aborted: abortedFlag,\n      };\n      this.putTrips(activeTripId, \"aborted\").then(() => {\n        console.log(\"Successfully deleted \")\n    })\n    });\n  }\n\n  // ---------------------------------OSRM API start-------------------------------------------------\n  /**\n   *\n   * @param toStart\n   * @param toPosition\n   * @returns route steps\n   */\n\n  osrm(toStart, toPosition) {\n    return new Promise((resolve) => {\n      const options = {\n        params: new HttpParams().set(\"overview\", \"false\").set(\"steps\", \"true\"),\n      };\n      this.http\n        .get(\n          this.osrmUrl +\n            toStart.lng +\n            \",\" +\n            toStart.lat +\n            \";\" +\n            toPosition.lng +\n            \",\" +\n            toPosition.lat,\n          options\n        )\n        .subscribe((data) => {\n          resolve(data);\n          console.log(\"osrm\", data);\n        });\n    });\n  }\n\n  /******************************\n   * UTILITY FUNCTIONS\n   */\n\n  /**\n   * Method for handling errors within the REST API\n   *\n   * @param err\n   */\n  async handleError(err: Error) {\n    console.log(\"error handler activated\");\n    let serverError =\n      \"Unfortunately, the server is not online. Please try again later.<hr>\" +\n      \"<br> We are currently working on it. Sorry for any inconvenience : <br>\";\n\n    let internetError = \"\";\n\n    let alert = this.alerts.create({\n      header: \"An Error Has Occurred\",\n      message:\n        \"Unfortunately, the server is not online. Please try again later.<hr>\" +\n        \"<br> We are currently working on it. Sorry for any inconvenience : <br>\",\n      buttons: [\n        /*         {\n          text: \"Restart\",\n          handler: () => {\n            this.splashScreen.show();\n            this.router.navigateByUrl(\"/home\");\n            console.log(\"Error handler [rest]\");\n            window.location.reload();\n          },\n        }, */\n        {\n          text: \"Exit app\",\n          handler: () => {\n            navigator[\"app\"].exitApp();\n          },\n        },\n      ],\n    });\n    (await alert).present();\n    setTimeout(async () => {\n      (await alert).dismiss();\n    }, 5000);\n    console.error(`[REST-API] ${err.message}`);\n    console.error(err);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { HttpClient } from \"@angular/common/http\";\nimport { AlertController, ToastController } from \"@ionic/angular\";\nimport { GlobalConstants as GConst }  from \"src/app/common/global-constants\";\nimport { Vibration } from \"@awesome-cordova-plugins/vibration/ngx\";\nimport { TextToSpeech } from \"@ionic-native/text-to-speech\";\nimport { AlertControlService } from \"../alertControl/alert-control.service\";\nimport { OutputControllerService } from \"../outputController/output-controller.service\";\nimport { Users } from \"src/app/interface/users\";\n interface Idata{\n  type;\n  modifier;\n  name;\n  \n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SignalingService {\n  swarmId = null;\n  user = null;\n  response;\n  duration;\n  distance;\n  navInformation;\n  navIcon;\n  alertpresent:boolean = false;\n  constructor(\n    public http: HttpClient,\n    public alertCtrl: AlertController,\n    public alertController : AlertControlService,\n    private vibration: Vibration,\n    public toastController: ToastController,\n    private tts: TextToSpeech,\n    public outputController : OutputControllerService\n  ) {}\n  // general ttp call for all navigation form\n  callSpeach(message) {\n    /* this.tts\n      .speak(message)\n      .then(() => console.log(\"success\"))\n      .catch((res) => {\n        console.log(\"ERROR generated due to navigation to voice \", res);\n      }); */\n  }\n\n  //shows the right alert depending on the resp\n  signaling(resp, result, time, filterForChoosenRoute:Users) {\n    \n    console.log(\"in signaling\");\n    console.log(\n      \"In signaling responses according to radius\",\n      resp[0][\"radius\"]\n    );\n    if (resp[0][\"radius\"] == GConst.meeting_checkppoint_radius_outside) {\n      if (resp[0].id.includes(filterForChoosenRoute.foreign_trip_id)) {\n        this.approachAlert(resp[0].notification.title, result, time);\n      console.log(\n        \"radius code 50  approaching alert for the checkpoint \",\n        resp[0],\n        \" \",\n        result,\n        \"  \",\n        time\n      );\n      this.vibration.vibrate([3000]);\n        \n      }\n      \n    }\n    if (resp[0][\"radius\"] == GConst.leaving_checkppoint_radius_outside) {\n      if (resp[0].id.includes(filterForChoosenRoute.foreign_trip_id)) {\n        this.leaveAlert(resp[0].notification.title, result, time);\n      console.log(\n        \"radius code 50 leaving schwarm \",\n        resp[0],\n        \" \",\n        result,\n        \"  \",\n        time\n      );\n      this.vibration.vibrate([3000]);\n        \n      }\n      \n    }\n    if (resp[0][\"radius\"] == GConst.checkpoint_radius_inner) {\n      if (resp[0].id.includes(filterForChoosenRoute.foreign_trip_id)) {\n        console.log(\n          \"radius code 10, checkpoint alert just reached checkpoint\",\n          resp[0],\n          \" \",\n          result,\n          \"  \",\n          time\n        );\n  \n        this.outputController.genereateOutput(\"innercheckpointAlert\", \"You just arrived at the checkpoint\")\n        if (!this.alertpresent) {\n          this.alertpresent= true\n          // this.checkPointAlert();\n          // this.vibration.vibrate([3000]);\n          \n        }\n        \n      }\n      \n    }\n    // notification for the destination arrived\n    if (resp[0][\"radius\"] == GConst.destination_radius) {\n      this.leaveAlertRoute(resp[0].notification.title);\n      console.log(\n        \"radius code 50 destination arrived\",\n        resp[0],\n        \" \",\n        result,\n        \"  \",\n        time\n      );\n      this.vibration.vibrate([3000]);\n    }\n    if (resp[0][\"radius\"] == GConst.navigational_radius) {\n      this.Navigationaller(\n        resp[0].notification.title,\n        resp[0][\"notification\"][\"text\"],\n        resp[0][\"notification\"][\"icon\"],\n        resp[0].notification.data\n      );\n      console.log(\n        \"navigation information from geofence\",\n        resp[0],\n        \" \",\n        result,\n        \"  \",\n        time\n      );\n      this.vibration.vibrate([3000]);\n    }\n    if (resp[0][\"radius\"] == GConst.navigational_leave_radius) {\n      this.Navigationaller(\n        resp[0].notification.title,\n        resp[0][\"notification\"][\"text\"],\n        resp[0][\"notification\"][\"icon\"],\n        resp[0].notification.data\n      );\n      console.log(\n        \"navigation information from geofence\",\n        resp[0],\n        \" \",\n        result,\n        \"  \",\n        time\n      );\n      this.vibration.vibrate([1000]);\n    }\n\n    \n  }\n  async Navigationaller(title, text, icon, data) {\n    let inhalt = \"\";\n    console.log(\"now in signaling navigation \", title,\"text\",text);\n    //check first if street name is defined\n    // ! here we have to consider what infromation is available to us and what is not\n\n    // return what is available , if not edit the message inn something understandable \n    let keywords = data;\n    inhalt = this.checkNavigationInformation(keywords)\n\n\n    \n      this.navInformation = inhalt;\n      this.navIcon=icon\n\n      this.callSpeach(inhalt);\n    \n    console.log(\"-----------inhalt is :\", inhalt);\n  }\n  checkNavigationInformation(data: Idata):string {\n    // start with the type \n    let type = data.type, name = data.name, modifier = data.modifier;\n    let output =\"\"\n    if (type == \"\" || type.includes(\"undefined\") || type.includes(undefined)) {\n       output = \"\"\n    } else {\n      output = type;\n    }\n    // check modifier\n    if (modifier == \"\" || modifier.includes(\"undefined\") || modifier.includes(undefined)) {\n      //  output += \"\"\n       output += \"\"\n    } else {\n      output = output + \" \" + modifier;\n    }\n\n    // check for street name \n    if (name == \"\" || name.includes(\"undefined\") || name.includes(undefined)) {\n      //  output += \" \"\n       output += \"\"\n    } else {\n      output = output + \" \" + name;\n    }\n    return output\n    \n  }\n  async approachAlert(street, result, time) {\n    let message: string;\n    if (\n      street == \"undefined\" ||\n      result == \"undefined\" ||\n      time == \"undefined\" ||\n      street == undefined ||\n      result == undefined ||\n      time == undefined ||\n      street == null ||\n      result == null ||\n      time == null\n    ) {\n      message = \"Reaching the checkpoint in 50 meters\";\n    } else {\n      message =\n        \"Reaching the checkpoint in: \" +\n        result +\n        \" -- \" +\n        time +\n        \"min\" +\n        \" at \" +\n        street;\n    }\n    \n    this.outputController.genereateOutput(\"meetcheckpointAlert\", message)\n\n    this.callSpeach(\"Reaching checkpoint in 50 meters\");\n  }\n\n  async leaveAlert(street, result, time) {\n    let message: string;\n    if (\n      street == \"undefined\" ||\n      result == \"undefined\" ||\n      time == \"undefined\" ||\n      street == undefined ||\n      result == undefined ||\n      time == undefined ||\n      street == null ||\n      result == null ||\n      time == null\n    ) {\n      message = \"Leaving the swarm\";\n    } else {\n      message =\n        \"Leaving the Swarm in: \" +\n        result +\n        \" -- \" +\n        time +\n        \"min\" +\n        \" at \" +\n        street;\n    }\n\n    this.outputController.genereateOutput(\"leavecheckpointAlert\", message)\n    this.callSpeach(message);\n  }\n  async leaveAlertRoute(street) {\n    let alertmesage = \"\";\n    if (\n      street == undefined ||\n      street == \"undefined\" ||\n      street == \"\" ||\n      street.includes(\"undefined\")\n    ) {\n      alertmesage = \"Destination reached\";\n    } else {\n      alertmesage = \"Destination reached\" + street;\n    }\n    this.navInformation = alertmesage;\n    \n\n    this.outputController.genereateOutput(\"destinationReached\", alertmesage)\n    this.callSpeach(alertmesage);\n  }\n  async checkPointAlert() {\n    let alert = await this.alertCtrl.create({\n      header: \"Checkpoint Alert\",\n      message: \"You just reached the checkpoint\",\n      cssClass: \"home-back-alert\",\n      buttons: [\n        {\n          text: 'OK',\n          role: 'confirm',\n          handler: () => {\n            this.alertpresent=false\n          }\n        }\n      ],\n    });\n \n      await alert.present();\n\n    setTimeout(() => {\n      alert.dismiss();\n      this.alertpresent=false\n    }, 5000);\n    this.callSpeach(\"You just reached the checkpoint\");\n  }\n\n  getNavigationalInformation(): Promise<string> {\n    // return this.navInformation;\n    return new Promise((resolve) => {\n      console.log(\"[signaling] Navinfromation :\", this.navInformation);\n      resolve(this.navInformation);\n    });\n  }\n  getNavigationalSigns(): Promise<string> {\n    // return this.navInformation;\n    return new Promise((resolve) => {\n      // console.log(\"[signaling] Navinfromation :\", this.navInformation);\n      resolve(this.navIcon);\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Storage } from \"@ionic/storage-angular\";\nimport { resolve } from \"dns\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class StorageService {\n  // key value array\n  keyArray = [];\n  // this variable is the persistent storage\n  private _storage: Storage;\n  // flag to know if trip was suceesfull or not\n  private TripSuccessful: boolean;\n  // old trip id\n  private tripID: string;\n  // userID\n  private UserID;\n  // device ID\n  private DeviceId;\n\n  // ! settings variable will be saved here\n/* \nthis.storage.set(\"deviceID:\", this.deviceId);\nthis.storage.set(\"userID:\", data[\"user_id\"]);\nthis.storage.set(\"trip_id\", this.choosen_route_id)\n\n\n\n */  \n\n  returnValue;\n\n  constructor(private storage: Storage) {\n    \n    this.init();\n  }\n\n  async init() {\n    // If using, define drivers here: await this.storage.defineDriver(/*...*/);\n    console.log(\"function calles init serice storage\");\n    const storage = await this.storage.create();\n    this._storage = storage;\n  }\n\n  // set a key value pair\n  public set(key: string, value: any) {\n    this._storage?.set(key, value);\n    this.keyArray.push({ key: key, value: value });\n\n  }\n  // get the stored key value\n  async get(key: string) {\n    const name = await this._storage?.get(key);\n    console.log(\"get:key -\",key, \"value\" , name);\n    return name;\n  }\n  // delete the stored key value\n  delete(key: string) {\n    this._storage?.remove(key);\n  }\n  // clear the whole storage\n  clearStorage() {\n    this.keyArray=[]\n    this._storage.clear();\n  }\n\n  // return all the stored key value pair\n\n  getAll() {\n    return new Promise((resolve) => {\n      let arr=[]\n      this._storage?.forEach((value, key) => {\n        console.log(key, \":\", value);\n        arr.push({ key: key, value: value });\n      });\n      console.log(\"key array is \", arr);\n       resolve(arr);\n    });\n  }\n\n  get_sync_keyvaluearray(){\n    return new Promise((resolve) => {\n      resolve(this.keyArray)\n    })\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\nimport { Users } from \"src/app/interface/users\";\nimport { RestApiService } from \"../rest-api/rest-api.service\";\nimport { StorageService } from \"../storage/storage.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\n\n/*\n * this service is created to use as a central data provider , to all the pages even if one page cannot consistently\n * transfer the data to other.\n *\n * Also to transfer the log data which is be saved externally on the storage device, directly copying all the data here\n *\n */\nexport class TransferService {\n  last_trip_deleted_successfully: boolean = false;\n  currentPosition;\n  user_old;\n  device_old;\n\n  constructor(private rest: RestApiService, private storage: StorageService) {}\n\n  clearService(page?: string) {\n    this.storage.get(\"last_trip_deleted_successfully\").then((res) => {\n      this.last_trip_deleted_successfully = res;\n      console.log(\n        \"last trip deleted succesull\",\n        this.last_trip_deleted_successfully,\n        \"from page \",\n        page\n      );\n      if (\n        this.last_trip_deleted_successfully ||\n        this.last_trip_deleted_successfully == undefined\n      ) {\n        this.startpoint =\n          this.endpoint =\n          this.previouslogs =\n          this.routeID =\n          this.routeGeometry =\n          this.userPosition =\n          this.meetingPoint =\n          this.leavingPoint =\n          this.meetingStreet =\n          this.LeavingStreet =\n          this.overlapse =\n          this.currentPosition =\n          this.navigation_steps =\n            undefined;\n        this.last_trip_deleted_successfully = false;\n        this.geofenceFlag = false;\n      } else {\n        this.storage.get(\"tripID\").then((res) => {\n          this.routeID = res;\n        });\n        this.endpoint = this.storage.get(\"endpoint\").then((res) => {\n          this.endpoint = res;\n        });\n        this.storage.get(\"startpoint\").then((res) => {\n          this.startpoint = res;\n        });\n        this.storage.get(\"userID\").then((res) => {\n          this.user_old = res;\n        });\n        this.storage.get(\"deviceID\").then((res) => {\n          this.device_old = res;\n          console.info(\n            \"deleting the ghost trip for RouteId :\",\n            this.routeID,\n            \"startpoint\",\n            this.startpoint,\n            \"endpoint\",\n            this.endpoint,\n            \"device\",\n            this.device_old,\n            \"userId \",\n            this.user_old\n          );\n          this.rest\n            .updateUser_ghostUser(\n              this.user_old,\n              this.device_old,\n              this.endpoint,\n              this.routeID,\n              true,\n              true,\n              0\n            )\n            .then(() => console.log(\"ghost trip \"))\n            .catch((error) => {\n              console.log(\"ghost trip updateUser valled\");\n              this.logtext =\n                this.logtext +\n                new Date().toISOString().substring(11, 19) +\n                \" Error: \" +\n                error +\n                \"\\r\\n\";\n            });\n          /* this.rest\n            .update_trip_ghostTrip(\n              this.user_old,\n              this.device_old,\n              this.startpoint,\n              this.routeID,\n              true,\n              true,\n              \"transferService Ghost trip \"\n            )\n            .then(() => console.log(\"trip deleted\"))\n            .catch((error) => {\n              console.log(\"ghost trip error update trip called\");\n              this.logtext =\n                this.logtext +\n                new Date().toISOString().substring(11, 19) +\n                \" Error: \" +\n                error +\n                \"\\r\\n\";\n            }); */\n          this.last_trip_deleted_successfully = false;\n          this.geofenceFlag = false;\n          this.storage.set(\"last_trip_deleted_successfully\", true);\n        });\n      }\n    });\n  }\n  deviceID;\n  userID;\n\n  _setDeviceID(id) {\n    this.deviceID = id;\n    this.storage.set(\"deviceID\", id);\n    console.log(\"deviceID\", id);\n  }\n  _setUserID(id) {\n    this.userID = id;\n    this.storage.set(\"userID\", id);\n    console.log(\"setting user ID\", id);\n  }\n\n  /* \n  ? state to be transfered from home to tripproposals\n  \n  state: {\n        logText: this.logText,\n        startpoint: this.currentposition,\n        endpoint: this.Locations.endpoint,\n        prev: this.logg,\n      },\n      \n  */\n\n  public logtext;\n  startpoint;\n  endpoint;\n  previouslogs;\n\n  // start position get and set\n  _getStartPosition() {\n    console.log(\"transfer start\", this.startpoint);\n\n    return this.startpoint;\n  }\n  _setStartPosition(pos) {\n    this.storage.set(\"startpoint\", pos);\n    this.startpoint = pos;\n  }\n\n  // destination position get and set\n\n  _setDestinationPosition(pos) {\n    this.endpoint = pos;\n    this.storage.set(\"endpoint\", this.endpoint);\n  }\n\n  _getDestinationPosition() {\n    return this.endpoint;\n  }\n\n  // for log details\n\n  _getLogText() {\n    return this.logtext;\n  }\n  _setLogText(logg) {\n    this.logtext = logg;\n  }\n\n  // for previous logs data\n\n  _getPreviousLog() {\n    return this.previouslogs;\n  }\n\n  _setPreviousLog(logg) {\n    this.previouslogs = logg;\n  }\n\n  // tripproposal to trips page\n\n  navigation_steps;\n  routeID;\n  routeGeometry;\n  userPosition;\n  meetingPoint;\n  leavingPoint;\n  meetingStreet;\n  LeavingStreet;\n  endtripStreet;\n  overlapse;\n  geofenceFlag: boolean = false;\n  lastPointRoute;\n  expectedSwarmArray;\n  userList;\n  distance;\n\n  _getLastPointRoute() {\n    return this.lastPointRoute;\n  }\n  _setLastPointRoute(point): void {\n    this.lastPointRoute = point;\n  }\n\n  _getEndTripStreet() {\n    return this.endtripStreet;\n  }\n  _setEndTripStreet(streetname) {\n    this.endtripStreet = streetname;\n    console.log(\"endTripstreet name \", this.endtripStreet);\n  }\n\n  _getNavSteps() {\n    return this.navigation_steps;\n  }\n  _setNavSteps(x: Array<object>) {\n    console.log(\"[transfer service] navigational steps passed param \", x);\n    this.navigation_steps = x;\n    console.log(\"local variable \", this.navigation_steps);\n    console.log(\n      \"length of both objects:  x = \",\n      x.length,\n      \" : navsteps var = \",\n      this.navigation_steps.length\n    );\n  }\n  _getRouteID() {\n    return this.routeID;\n  }\n  _setRouteID(id) {\n    this.routeID = id;\n    this.storage.set(\"tripID\", this.routeID);\n  }\n\n  _getRouteGeometry() {\n    return this.routeGeometry;\n  }\n  _setRouteGeometry(geometry) {\n    this.routeGeometry = geometry;\n  }\n\n  _setUserPosition(pos) {\n    this.userPosition = pos;\n  }\n  _getUserPosition() {\n    return this.userPosition;\n  }\n\n  _getMeetingPoint() {\n    return this.meetingPoint;\n  }\n  _setMeetingPoint(point) {\n    this.meetingPoint = point;\n  }\n\n  _getMeetingStreet() {\n    return this.meetingStreet;\n  }\n  _setMeetingStreet(name) {\n    this.meetingStreet = name;\n  }\n  _getleavingStreet() {\n    return this.LeavingStreet;\n  }\n  _setLeavingStreet(name) {\n    this.LeavingStreet = name;\n  }\n  _setOverlapse(points) {\n    this.overlapse = points;\n  }\n  _getOverlapse() {\n    return this.overlapse;\n  }\n  _setLeavingPoint(point) {\n    this.leavingPoint = point;\n  }\n  _getLeavingPoint() {\n    return this.leavingPoint;\n  }\n  _getTripDistance() {\n    return this.distance;\n  }\n  _setTripdistance(distance:number) {\n    this.distance= distance\n  }\n  // this service function will help to make sure geofence addOrUpdate function has been succesfully finished\n  // will return a boolean promise\n  _geofenceFlagSuccessfull(): Promise<boolean> {\n    return new Promise((resolve) => {\n      console.log(\"geofence flag\", this.geofenceFlag);\n      resolve(this.geofenceFlag);\n    });\n  }\n\n  _setExpectedSwarmArray(array) {\n    this.expectedSwarmArray = array;\n  }\n  _getExpectedSwarmArray(): Users[] {\n    let array = this.expectedSwarmArray\n    return array;\n  }\n  _setUserList(list) {\n    this.userList = list\n  }\n  /**\n   * \n   * \n   */\n  _getUserList(): any [] {\n  console.log(\"Transfer User List\", this.userList)\n   return this.userList\n\n  }\n  /*   state: {\n    startpoint: this.startpoint,\n    endpoint: this.endpoint,\n    route_id: this.choosen_route_id,\n    route: this.choosen_route_geometry,\n    users_positions: this.users_positions,\n    meetlat: this.meetlat,\n    meetlng: this.meetlng,\n    leavelat: this.leavelat,\n    leavelng: this.leavelng,\n    overlapse: this.meetpts,\n    logText: this.logText,\n    prev: this.logg,\n    meetingStreet: this.meetingStreet,\n    leavingStreet: this.leavingStreet,\n  },\n \n  */\n\n  // here all the subscriber will be handled\n  flag = new Subject();\n\n  flagObservable;\n\n  public getStudents(): any {\n    console.log(\"observer called\", this.geofenceFlag);\n    this.flagObservable = new Observable((observer) => {\n      observer.next(this.geofenceFlag);\n    });\n\n    return this.flagObservable;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","var __decorate =\n    (this && this.__decorate) ||\n    function (decorators, target, key, desc) {\n        var c = arguments.length,\n            r =\n                c < 3\n                    ? target\n                    : desc === null\n                    ? (desc = Object.getOwnPropertyDescriptor(target, key))\n                    : desc,\n            d\n        if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')\n            r = Reflect.decorate(decorators, target, key, desc)\n        else\n            for (var i = decorators.length - 1; i >= 0; i--)\n                if ((d = decorators[i]))\n                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r\n        return c > 3 && r && Object.defineProperty(target, key, r), r\n    }\nimport { Injectable } from '@angular/core'\nimport { Subject } from 'rxjs'\nimport { IonicNativePlugin } from '@ionic-native/core'\n\nfunction FCM() {}\nFCM.prototype.clearAllNotifications = function () {\n    return window.FCM.clearAllNotifications()\n}\nFCM.prototype.createNotificationChannel = function (channelConfig) {\n    return window.FCM.createNotificationChannel(channelConfig)\n}\nFCM.prototype.deleteInstanceId = function () {\n    return window.FCM.deleteInstanceId()\n}\nFCM.prototype.getAPNSToken = function () {\n    return window.FCM.getAPNSToken()\n}\nFCM.prototype.getInitialPushPayload = function () {\n    return window.FCM.getInitialPushPayload()\n}\nFCM.prototype.getToken = function () {\n    return window.FCM.getToken()\n}\nFCM.prototype.hasPermission = function () {\n    return window.FCM.hasPermission()\n}\nFCM.prototype.onNotification = function (options) {\n    var observable = new Subject()\n    var handler = function (payload) {\n        return observable.next(payload)\n    }\n    window.FCM.onNotification(handler, options)\n    return observable\n}\nFCM.prototype.onTokenRefresh = function (options) {\n    var observable = new Subject()\n    window.FCM.onTokenRefresh(function (token) {\n        return observable.next(token)\n    }, options)\n    return observable\n}\nFCM.prototype.requestPushPermission = function (options) {\n    return window.FCM.requestPushPermission(options)\n}\nFCM.prototype.subscribeToTopic = function (topic) {\n    return window.FCM.subscribeToTopic(topic)\n}\nFCM.prototype.unsubscribeFromTopic = function (topic) {\n    return window.FCM.unsubscribeFromTopic(topic)\n}\nFCM.pluginName = 'FCM'\nFCM.plugin = 'cordova-plugin-fcm-with-dependecy-updated'\nFCM.pluginRef = 'FCM'\nFCM.repo = 'https://github.com/andrehtissot/cordova-plugin-fcm-with-dependecy-updated'\nFCM.platforms = ['Android', 'iOS']\nFCM.installed = IonicNativePlugin.installed\nFCM.getPlugin = IonicNativePlugin.getPlugin\nFCM.getPluginName = IonicNativePlugin.getPluginName\nFCM.getPluginRef = IonicNativePlugin.getPluginRef\nFCM.getPluginInstallName = IonicNativePlugin.getPluginInstallName\nFCM.getSupportedPlatforms = IonicNativePlugin.getSupportedPlatforms\nFCM = __decorate([Injectable()], FCM)\n\nexport { FCM }\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t79,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t5593,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t3225,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t4812,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t6655,\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t4856,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t3059,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t8648,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t8308,\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t4690,\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t4090,\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t6214,\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t9447,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime-button.entry.js\": [\n\t\t7950,\n\t\t\"default-node_modules_ionic_core_dist_esm_parse-d395420d_js-node_modules_ionic_core_dist_esm_t-5c7f8f\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t9689,\n\t\t\"default-node_modules_ionic_core_dist_esm_parse-d395420d_js-node_modules_ionic_core_dist_esm_t-5c7f8f\",\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t8840,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t749,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t9667,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t3288,\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t5473,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t3634,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t2855,\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t495,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t8737,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t9632,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-internal.entry.js\": [\n\t\t4446,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js\"\n\t],\n\t\"./ion-picker-internal.entry.js\": [\n\t\t2275,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-internal_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t8050,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t8994,\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t3592,\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t5454,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t290,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t2666,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t4816,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t5534,\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t4902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t1938,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t8179,\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t668,\n\t\t\"node_modules_ionic_core_dist_esm_ion-slide_2_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t1624,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t9989,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t8902,\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t199,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t8395,\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t6357,\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t8268,\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t5269,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t2875,\n\t\t\"node_modules_ionic_core_dist_esm_ion-virtual-scroll_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 863;\nmodule.exports = webpackAsyncContext;"],"names":["Component","Geolocation","SplashScreen","AlertController","Platform","ToastController","NavController","AppConfig","Events","RestApiService","Network","OpenNativeSettings","StatusBar","AndroidPermissions","uuid","File","BluetoothLEService","AppCenterAnalytics","AppCenterCrashes","CodePush","StorageService","TransferService","Diagnostic","FCM","BehaviorSubject","Logger","LoggingService","AppComponent","constructor","navCtrl","geolocation","platform","statusBar","splashScreen","events","appConfig","androidPermissions","file","network","alertCtrl","toastCtrl","restProvider","openNativeSettings","bluetooth","appCenterAnalytics","codePush","transfer","storage","diagnostic","fcm","logging","title","url","icon","Date","toISOString","substring","fcm_message_broker","asObservable","result","console","log","error","logText","filename","filelog","replace","fileEvent","pages","component","is","ready","then","success","installedAndUpdated","status","generateToast","failure","reason","GooglePlayServicesChecker","check","isEnabled","hasCrashedInLastSession","val","lastSessionCrashReport","report","err","trackEvent","Category","FileName","success2","error2","id","writeLogs","externalApplicationStorageDirectory","backButton","subscribeWithPriority","processNextHandler","writeFile","succ","runLogging","logger","debug","initialize","ngOnInit","initializeApp","ngOnDestroy","checkCodePush","sync","subscribe","syncStatus","downloadProgress","progress","receivedBytes","totalBytes","checkLocationAccuracy","isGpsLocationAvailable","res","isGpsLocationEnabled","registerLocationStateChangeHandler","alert","create","header","message","buttons","text","handler","switchToLocationSettings","present","getLocationAuthorizationStatus","suc","requestLocationAuthorization","setTimeout","succ2","window","location","reload","setupFCM","token","getToken","notification","onNotification","data","next","Promise","resolve","msg","color","duration","toast","toasts","push","timeout","length","show","splice","__this","NativeLogs","getLog","_logs","logg","append","backgroundColorByName","hide","catch","offline","value","getUserIdentifier","userID","checkInternet","type","connect1sub","disconnect1sub","connection","onConnect","alertConnection","onDisconnect","checkGPSPermission","checkPermission","requestGPSPermission","requestPermissions","PERMISSION","READ_PHONE_STATE","ACCESS_BACKGROUND_LOCATION","ACCESS_COARSE_LOCATION","ACCESS_FINE_LOCATION","ACTIVITY_RECOGNITION","FOREGROUND_SERVICE","LOCATION_HARDWARE","note","connection_alert","subHeader","open","navigator","exitApp","dismiss","toastConnect","animated","role","onDidDismiss","selector","template","Injectable","AlertControlService","alertcontrol","getAlert","getTop","alertDismiss","tripspageAlerts","generateAlert","button","DimissDuration","cssClass","alertObj","DismissDuration","sum","timeOutArray","forEach","element","lastTimeout","overlayDelay","t","timeoutindex","Dismiss","providedIn","Vibration","v4","uuidv4","OutputControllerService","swarmEvent","rest","vibration","outputConntroller","messageType","device_id","deviceId","leader","swarm_id","previous_endpoints","tripintersection_geometry","current_endpoints","obs","userId","JSON","stringify","previous_object","temp_object","current_object","previous_list","first_initalize","cercle","timeoutflag","curr_obj","temp_list","array1Sorted","slice","sort","every","index","array2Sorted","joined_users","genereateOutput","left_users","prev","delay_time","swarmGroupController","currentList","previousList","event","mesh_list","prev_list","filtered_db","meshNetworkDB","filter","obj","includes","resetLocalClient","swarmId","old_swarm_id","new_swarm_id","assignLeader","user_meshId","createSwarm","split","generateSwarmID","none","groupedArray","reduce","acc","key","Object","keys","find","updateUsersInSwarm","deleteSwarm","filteredArray","concated_swarm_id","map","join","merge","meshLeader","sendMessageToMeshNetwork","resetDataPacket","dataPacket","groupDBController","are_you_leader","ref_self","findIndex","user","userMessage","parse","ref","groupDBController_advance","ref2","leaderArray","current_list","NearbyConnections","flushMessage","getMinUser","list","minUser","list_array","postSwarm","swarmCreated","oldSwarmId","updateSwarm","event_stop","getUpdated_cercle","set_cercle","x","initializeFunction0","getUpdated_card","getSwarmLength","updateInfoSwarm","swarmInterval","setInterval","swarmIntervalTime","stopUpdatinginfo","clearInterval","LogLevel","getPrimaryLoggerTransport","stringifyLogEvent","CordovaFileEntryApi","RotatingFileStream","buffer","concatMap","fromEventPattern","interval","environment","targetLogLevel","production","DEBUG","VERBOSE","setFilter","ev","level","setDefaultBroadcastEnabled","compareLastModifiedTime","a","b","getLastModificationTime","cdvFile","maxFileSize","files","createCacheRotationFiles","start","fileStream","clearFileStreamSub","mFileStreamSub","unsubscribe","combineLogs","refreshAllEntries","read","TextDecoder","decode","getFileName","pipe","saveLogEvents","e","fatal","verbose","outputText","outputBuffer","TextEncoder","encode","write","warn","alertService","checkpointalert","swarmalert","alertManager","category","alerts","data2","pop","undefined","alertMessage","alertManager_swarm","vibrate","alertManager_checkpoint","alertmessage","timeToDisplay","Inject","HttpClient","HttpParams","HttpHeaders","Router","http","router","fcmToken","options","headers","requestBody","fcm_token","post","apiUrl","handleError","getUsersPositions","tripid","set","params","get","getSwarmData","swarmid","devicelist_array","swarmID","active_members","DeviceID_array","put","delete","updateUser","currentPosition","activeTripId","destinationReachedFlag","abortedFlag","speed","Number","isNaN","position","position_timestamp","active_trip_id","destination_reached","aborted","Swarmupdate_trip","current_position","trip_id","page","lng","lat","getTripProposal","fromPosition","toPosition","intersections","toString","start_point","end_point","navigateByUrl","getTrips","foreignTripId","putTrips","validStatus","postUserlocation","userdeviceID","getUserlocation","tripId","getTripintersection","trip_intersection_id","eager","getAdresses","input","mykey","getadressgeocode","urlGeocode","updateUser_ghostUser","device","osrm","toStart","osrmUrl","serverError","internetError","decorators","args","GlobalConstants","GConst","TextToSpeech","SignalingService","alertController","toastController","tts","outputController","callSpeach","signaling","resp","time","filterForChoosenRoute","meeting_checkppoint_radius_outside","foreign_trip_id","approachAlert","leaving_checkppoint_radius_outside","leaveAlert","checkpoint_radius_inner","alertpresent","destination_radius","leaveAlertRoute","navigational_radius","Navigationaller","navigational_leave_radius","inhalt","keywords","checkNavigationInformation","navInformation","navIcon","name","modifier","output","street","alertmesage","checkPointAlert","getNavigationalInformation","getNavigationalSigns","Storage","init","_storage","keyArray","remove","clearStorage","clear","getAll","arr","get_sync_keyvaluearray","__decorate","target","desc","c","arguments","r","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","Subject","IonicNativePlugin","prototype","clearAllNotifications","createNotificationChannel","channelConfig","deleteInstanceId","getAPNSToken","getInitialPushPayload","hasPermission","observable","payload","onTokenRefresh","requestPushPermission","subscribeToTopic","topic","unsubscribeFromTopic","pluginName","plugin","pluginRef","repo","platforms","installed","getPlugin","getPluginName","getPluginRef","getPluginInstallName","getSupportedPlatforms"],"sourceRoot":"webpack:///","x_google_ignoreList":[25]}