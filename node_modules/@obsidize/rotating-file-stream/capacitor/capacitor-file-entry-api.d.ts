import { CapacitorFilePluginLike } from './capacitor-file-plugin-like';
import { FileEntryLike } from '../core/rotating-file-stream';
/**
 * Represents a single file entry from the capacitor file plugin system.
 */
export declare class CapacitorFileEntryApi implements FileEntryLike {
    protected readonly capacitorFilesystem: CapacitorFilePluginLike;
    protected readonly directory: string;
    protected readonly filePath: string;
    private mModifiedTime;
    private mSize;
    private mUri;
    constructor(capacitorFilesystem: CapacitorFilePluginLike, directory: string, filePath: string);
    static createCacheRotationFiles(capacitorFilesystem: CapacitorFilePluginLike, rotationFilesDirectory: string, filenames: string[]): CapacitorFileEntryApi[];
    static createRotationFiles(capacitorFilesystem: CapacitorFilePluginLike, rootDirectory: string, rotationFilesDirectory: string, filenames: string[]): CapacitorFileEntryApi[];
    getFileName(): string;
    getDirectoryName(): string;
    toURL(): string;
    getSize(): number;
    getLastModificationTime(): number;
    read(): Promise<ArrayBuffer>;
    refresh(): Promise<void>;
    write(bufferData: ArrayBuffer, overwrite: boolean): Promise<void>;
    private appendFileData;
    private overwriteFileData;
}
