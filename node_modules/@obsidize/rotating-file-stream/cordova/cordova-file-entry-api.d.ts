import { FileEntryLike } from '../core/rotating-file-stream';
import { RFSCordovaDirectoryEntryLike, RFSCordovaFileEntryLike, RFSCordovaFileEntryMetadataLike, CordovaFilePluginLike } from './cordova-file-plugin-like';
/**
 * Represents a single file entry from the cordova file plugin system.
 */
export declare class CordovaFileEntryApi implements FileEntryLike {
    protected readonly cordovaFile: CordovaFilePluginLike;
    protected readonly baseCordovaDirectoryNameDelegate: () => string;
    protected readonly directoryName: string;
    protected readonly fileName: string;
    protected targetBaseDirectory: RFSCordovaDirectoryEntryLike | null;
    protected targetDirectory: RFSCordovaDirectoryEntryLike | null;
    protected targetFile: RFSCordovaFileEntryLike | null;
    protected targetFileMetadata: RFSCordovaFileEntryMetadataLike | null;
    constructor(cordovaFile: CordovaFilePluginLike, baseCordovaDirectoryNameDelegate: () => string, directoryName: string, fileName: string);
    static createCacheRotationFiles(cordovaFile: CordovaFilePluginLike, directory: string, filenames: string[]): CordovaFileEntryApi[];
    static createRotationFiles(cordovaFile: CordovaFilePluginLike, baseDirectoryDelegate: () => string, directory: string, filenames: string[]): CordovaFileEntryApi[];
    get baseCordovaDirectoryName(): string;
    getFileName(): string;
    getDirectoryName(): string;
    toURL(): string;
    getSize(): number;
    getLastModificationTime(): number;
    write(data: ArrayBuffer, overwrite: boolean): Promise<void>;
    read(): Promise<ArrayBuffer>;
    refresh(): Promise<void>;
}
