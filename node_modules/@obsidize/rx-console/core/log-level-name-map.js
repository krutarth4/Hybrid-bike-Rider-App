import { LogLevel } from './log-level';
import { isNumber, isObject, isString } from './utility';
function generateCustomLevelName(level) {
    return `L-${level}`;
}
/**
 * Utility to customize numeric level name mappings.
 */
export class LogLevelNameMap {
    constructor() {
        this.namesByLevel = new Map();
        this.config = LogLevel;
        this.customizer = generateCustomLevelName;
        this.reset();
    }
    get(level) {
        return this.namesByLevel.get(level) || this.customizer(level);
    }
    reset() {
        this.namesByLevel.clear();
        this.update(this.config);
    }
    update(config) {
        if (!isObject(config))
            return;
        for (const [name, level] of Object.entries(config)) {
            if (isString(name) && isNumber(level)) {
                this.namesByLevel.set(level, name);
            }
        }
    }
}
LogLevelNameMap.main = new LogLevelNameMap();
