{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AwesomeCordovaNativePlugin } from '@awesome-cordova-plugins/core';\n/**\n * @name Vibration\n * @premier vibration\n * @description Vibrates the device\n * @usage\n * ```typescript\n * import { Vibration } from '@awesome-cordova-plugins/vibration/ngx';\n *\n * constructor(private vibration: Vibration) { }\n *\n * ...\n *\n * // Vibrate the device for a second\n * // Duration is ignored on iOS.\n * this.vibration.vibrate(1000);\n *\n * // Vibrate 2 seconds\n * // Pause for 1 second\n * // Vibrate for 2 seconds\n * // Patterns work on Android and Windows only\n * this.vibration.vibrate([2000,1000,2000]);\n *\n * // Stop any current vibrations immediately\n * // Works on Android and Windows only\n * this.vibration.vibrate(0);\n * ```\n */\nexport declare class Vibration extends AwesomeCordovaNativePlugin {\n    /**\n     * Vibrates the device for given amount of time.\n     *\n     * @param time {number|number[]} Milliseconds to vibrate the device. If passed an array of numbers, it will define a vibration pattern. Pass 0 to stop any vibration immediately.\n     */\n    vibrate(time: number | number[]): void;\n}\n"]}