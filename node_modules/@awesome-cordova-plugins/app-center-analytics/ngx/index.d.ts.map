{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AwesomeCordovaNativePlugin } from '@awesome-cordova-plugins/core';\nexport interface StringMap {\n    [s: string]: string;\n}\n/**\n * @name App Center Analytics\n * @description\n * App Center Analytics helps you understand user behavior and customer engagement to improve your app.\n * The SDK automatically captures session count and device properties like model, OS version, etc.\n * You can define your own custom events to measure things that matter to you.\n * All the information captured is available in the App Center portal for you to analyze the data.\n *\n * For more info, please see https://docs.microsoft.com/en-us/appcenter/sdk/analytics/cordova\n * @usage\n * ```typescript\n * import { AppCenterAnalytics } from '@awesome-cordova-plugins/app-center-analytics/ngx';\n *\n *\n * constructor(private appCenterAnalytics: AppCenterAnalytics) { }\n *\n * ...\n *\n * this.appCenterAnalytics.setEnabled(true).then(() => {\n *    this.appCenterAnalytics.trackEvent('My Event', { TEST: 'HELLO_WORLD' }).then(() => {\n *        console.log('Custom event tracked');\n *    });\n * });\n *\n * ```\n * @interfaces\n * StringMap\n */\nexport declare class AppCenterAnalytics extends AwesomeCordovaNativePlugin {\n    /**\n     * Tracks an custom event.\n     * You can send up to 200 distinct event names. Also, there is a maximum limit of 256 characters per event name\n     * and 64 characters per event property name and event property value.\n     *\n     * @param  {string} eventName Event name\n     * @param  {StringMap} properties Event properties\n     * @returns {Promise<void>}\n     */\n    trackEvent(eventName: string, properties: StringMap): Promise<void>;\n    /**\n     * Check if App Center Analytics is enabled\n     *\n     * @returns {Promise<boolean>}\n     */\n    isEnabled(): Promise<boolean>;\n    /**\n     * Enable or disable App Center Analytics at runtime\n     *\n     * @param  {boolean} shouldEnable Set value\n     * @returns {Promise<void>}\n     */\n    setEnabled(shouldEnable: boolean): Promise<void>;\n}\n"]}