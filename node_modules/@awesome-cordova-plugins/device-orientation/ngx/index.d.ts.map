{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AwesomeCordovaNativePlugin } from '@awesome-cordova-plugins/core';\nimport { Observable } from 'rxjs';\nexport interface DeviceOrientationCompassHeading {\n    /**\n     * The heading in degrees from 0-359.99 at a single moment in time. (Number)\n     */\n    magneticHeading: number;\n    /**\n     * The heading relative to the geographic North Pole in degrees 0-359.99 at a single moment in time. A negative value indicates that the true heading can't be determined. (Number)\n     */\n    trueHeading: number;\n    /**\n     * The deviation in degrees between the reported heading and the true heading. (Number)\n     */\n    headingAccuracy: number;\n    /**\n     * The time at which this heading was determined. (DOMTimeStamp)\n     */\n    timestamp: number;\n}\nexport interface DeviceOrientationCompassOptions {\n    /**\n     * How often to retrieve the compass heading in milliseconds. (Number) (Default: 100)\n     */\n    frequency?: number;\n    /**\n     * The change in degrees required to initiate a watchHeading success callback. When this value is set, frequency is ignored. (Number)\n     */\n    filter?: number;\n}\n/**\n * @name Device Orientation\n * @description\n * Requires Cordova plugin: `cordova-plugin-device-orientation`. For more info, please see the [Device Orientation docs](https://github.com/apache/cordova-plugin-device-orientation).\n * @usage\n * ```typescript\n * // DeviceOrientationCompassHeading is an interface for compass\n * import { DeviceOrientation, DeviceOrientationCompassHeading } from '@awesome-cordova-plugins/device-orientation/ngx';\n *\n * constructor(private deviceOrientation: DeviceOrientation) { }\n *\n * ...\n *\n * // Get the device current compass heading\n * this.deviceOrientation.getCurrentHeading().then(\n *   (data: DeviceOrientationCompassHeading) => console.log(data),\n *   (error: any) => console.log(error)\n * );\n *\n * // Watch the device compass heading change\n * var subscription = this.deviceOrientation.watchHeading().subscribe(\n *   (data: DeviceOrientationCompassHeading) => console.log(data)\n * );\n *\n * // Stop watching heading change\n * subscription.unsubscribe();\n * ```\n * @interfaces\n * DeviceOrientationCompassOptions\n * DeviceOrientationCompassHeading\n */\nexport declare class DeviceOrientation extends AwesomeCordovaNativePlugin {\n    /**\n     * Get the current compass heading.\n     *\n     * @returns {Promise<DeviceOrientationCompassHeading>}\n     */\n    getCurrentHeading(): Promise<DeviceOrientationCompassHeading>;\n    /**\n     * Get the device current heading at a regular interval\n     *\n     * Stop the watch by unsubscribing from the observable\n     *\n     * @param {DeviceOrientationCompassOptions} [options] Options for compass. Frequency and Filter. Optional\n     * @returns {Observable<DeviceOrientationCompassHeading>} Returns an observable that contains the compass heading\n     */\n    watchHeading(options?: DeviceOrientationCompassOptions): Observable<DeviceOrientationCompassHeading>;\n}\n"]}