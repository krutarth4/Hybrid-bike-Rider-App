{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @name Geofence\n * @description Monitors circular geofences around latitude/longitude coordinates, and sends a notification to the user when the boundary of a geofence is crossed. Notifications can be sent when the user enters and/or exits a geofence.\n * Geofences persist after device reboot. Geofences will be monitored even when the app is not running.\n * @usage\n * ```typescript\n * import { Geofence } from '@ionic-native/geofence';\n *\n * ...\n *\n * constructor(private geofence: Geofence) {\n *   // initialize the plugin\n *   geofence.initialize().then(\n *     // resolved promise does not return a value\n *     () => console.log('Geofence Plugin Ready'),\n *     (err) => console.log(err)\n *   )\n * }\n *\n * ...\n *\n * private addGeofence() {\n *   //options describing geofence\n *   let fence = {\n *     id: '69ca1b88-6fbe-4e80-a4d4-ff4d3748acdb', //any unique ID\n *     latitude:       37.285951, //center of geofence radius\n *     longitude:      -121.936650,\n *     radius:         100, //radius to edge of geofence in meters\n *     transitionType: 3, //see 'Transition Types' below\n *     notification: { //notification settings\n *         id:             1, //any unique ID\n *         title:          'You crossed a fence', //notification title\n *         text:           'You just arrived to Gliwice city center.', //notification body\n *         openAppOnClick: true //open app when notification is tapped\n *     }\n *   }\n *\n *   this.geofence.addOrUpdate(fence).then(\n *      () => console.log('Geofence added'),\n *      (err) => console.log('Geofence failed to add')\n *    );\n * }\n *\n * ```\n * ### Transition Types ###\n * Transition type specifies whether the geofence should trigger when the user enters and/or leaves the geofence.\n *\n * #### Supported values ####\n * - 1: Enter\n * - 2: Leave\n * - 3: Both\n *\n * ### Defining a Geofence ###\n * Geofences are defined by an object that is passed to `addOrUpdate()`. Object properties are:\n * - id: Any unique ID for the geofence. This ID is used to remove and update a geofence\n * - latitude: Latitude coordinate of the center of the geofence radius\n * - longitude: Latitude coordinate of the center of the geofence radius\n * - radius: Radius from the center to the edge of the geofence\n * - transitionType: Type of geofence transition to monitor for. See 'Transition Types' above\n * - notification: Object. Options for defining the notification sent when a geofence is crossed\n *   - id: Any unique ID\n *   - title: Notification title\n *   - text: Notification body\n *   - openAppOnClick: Boolean. Whether to open the app when the notification is tapped by the user\n *\n * ### Troubleshooting ###\n * #### I get compile errors when I run `ionic build ios` or `ionic run ios`. ####\n * This could be caused by the Cordova project directory in `/platforms/ios` not being named correctly.\n * Try running `ionic cordova platform rm <platform>` then run `ionic cordova platform add <platform>` to recreate the\n * platform directories.\n */\nexport declare class Geofence extends IonicNativePlugin {\n    TransitionType: {\n        ENTER: number;\n        EXIT: number;\n        BOTH: number;\n    };\n    /**\n     * Subscribe to get notified when a transition is received\n     * @return {Observable<any>}\n     */\n    onTransitionReceived(): Observable<any>;\n    /**\n     * Initializes the plugin. User will be prompted to allow the app to use location and notifications.\n     *\n     * @returns {Promise<void>}\n     */\n    initialize(): Promise<void>;\n    /**\n     * Adds a new geofence or array of geofences. For geofence object, see above.\n     *\n     * @returns {Promise<void>}\n     */\n    addOrUpdate(geofences: Object | Object[]): Promise<void>;\n    /**\n     * Removes a geofence or array of geofences. `geofenceID` corresponds to one or more IDs specified when the\n     * geofence was created.\n     *\n     * @returns {Promise<void>}\n     */\n    remove(geofenceId: string | string[]): Promise<void>;\n    /**\n     * Removes all geofences.\n     *\n     * @returns {Promise<void>}\n     */\n    removeAll(): Promise<void>;\n    /**\n     * Returns an array of geofences currently being monitored.\n     *\n     * @returns {Promise<Array<string>>}\n     */\n    getWatched(): Promise<string>;\n    /**\n     * Called when the user clicks a geofence notification. iOS and Android only.\n     *\n     * @returns {Observable<any>}\n     */\n    onNotificationClicked(): Observable<any>;\n}\n"]}