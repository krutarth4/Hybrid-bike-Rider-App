{"version":3,"file":"index.js","sources":["../../../src/@ionic-native/plugins/geofence/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, CordovaFunctionOverride, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n\ndeclare const window: any;\n\n/**\n * @name Geofence\n * @description Monitors circular geofences around latitude/longitude coordinates, and sends a notification to the user when the boundary of a geofence is crossed. Notifications can be sent when the user enters and/or exits a geofence.\n * Geofences persist after device reboot. Geofences will be monitored even when the app is not running.\n * @usage\n * ```typescript\n * import { Geofence } from '@ionic-native/geofence';\n *\n * ...\n *\n * constructor(private geofence: Geofence) {\n *   // initialize the plugin\n *   geofence.initialize().then(\n *     // resolved promise does not return a value\n *     () => console.log('Geofence Plugin Ready'),\n *     (err) => console.log(err)\n *   )\n * }\n *\n * ...\n *\n * private addGeofence() {\n *   //options describing geofence\n *   let fence = {\n *     id: '69ca1b88-6fbe-4e80-a4d4-ff4d3748acdb', //any unique ID\n *     latitude:       37.285951, //center of geofence radius\n *     longitude:      -121.936650,\n *     radius:         100, //radius to edge of geofence in meters\n *     transitionType: 3, //see 'Transition Types' below\n *     notification: { //notification settings\n *         id:             1, //any unique ID\n *         title:          'You crossed a fence', //notification title\n *         text:           'You just arrived to Gliwice city center.', //notification body\n *         openAppOnClick: true //open app when notification is tapped\n *     }\n *   }\n *\n *   this.geofence.addOrUpdate(fence).then(\n *      () => console.log('Geofence added'),\n *      (err) => console.log('Geofence failed to add')\n *    );\n * }\n *\n * ```\n * ### Transition Types ###\n * Transition type specifies whether the geofence should trigger when the user enters and/or leaves the geofence.\n *\n * #### Supported values ####\n * - 1: Enter\n * - 2: Leave\n * - 3: Both\n *\n * ### Defining a Geofence ###\n * Geofences are defined by an object that is passed to `addOrUpdate()`. Object properties are:\n * - id: Any unique ID for the geofence. This ID is used to remove and update a geofence\n * - latitude: Latitude coordinate of the center of the geofence radius\n * - longitude: Latitude coordinate of the center of the geofence radius\n * - radius: Radius from the center to the edge of the geofence\n * - transitionType: Type of geofence transition to monitor for. See 'Transition Types' above\n * - notification: Object. Options for defining the notification sent when a geofence is crossed\n *   - id: Any unique ID\n *   - title: Notification title\n *   - text: Notification body\n *   - openAppOnClick: Boolean. Whether to open the app when the notification is tapped by the user\n *\n * ### Troubleshooting ###\n * #### I get compile errors when I run `ionic build ios` or `ionic run ios`. ####\n * This could be caused by the Cordova project directory in `/platforms/ios` not being named correctly.\n * Try running `ionic cordova platform rm <platform>` then run `ionic cordova platform add <platform>` to recreate the\n * platform directories.\n */\n@Plugin({\n  pluginName: 'Geofence',\n  plugin: 'cordova-plugin-geofence',\n  pluginRef: 'geofence',\n  repo: 'https://github.com/cowbell/cordova-plugin-geofence',\n  platforms: ['Android', 'iOS', 'Windows', 'Windows Phone 8']\n})\n@Injectable()\nexport class Geofence extends IonicNativePlugin {\n\n  TransitionType = {\n    ENTER: 1,\n    EXIT: 2,\n    BOTH: 3\n  };\n\n  /**\n   * Subscribe to get notified when a transition is received\n   * @return {Observable<any>}\n   */\n  @CordovaFunctionOverride()\n  onTransitionReceived(): Observable<any> { return; }\n\n  /**\n   * Initializes the plugin. User will be prompted to allow the app to use location and notifications.\n   *\n   * @returns {Promise<void>}\n   */\n  @Cordova()\n  initialize(): Promise<void> { return; }\n\n  /**\n   * Adds a new geofence or array of geofences. For geofence object, see above.\n   *\n   * @returns {Promise<void>}\n   */\n  @Cordova()\n  addOrUpdate(geofences: Object | Object[]): Promise<void> { return; }\n\n  /**\n   * Removes a geofence or array of geofences. `geofenceID` corresponds to one or more IDs specified when the\n   * geofence was created.\n   *\n   * @returns {Promise<void>}\n   */\n  @Cordova()\n  remove(geofenceId: string | string[]): Promise<void> { return; }\n\n  /**\n   * Removes all geofences.\n   *\n   * @returns {Promise<void>}\n   */\n  @Cordova()\n  removeAll(): Promise<void> { return; }\n\n  /**\n   * Returns an array of geofences currently being monitored.\n   *\n   * @returns {Promise<Array<string>>}\n   */\n  @Cordova()\n  getWatched(): Promise<string> { return; }\n\n  /**\n   * Called when the user clicks a geofence notification. iOS and Android only.\n   *\n   * @returns {Observable<any>}\n   */\n  onNotificationClicked(): Observable<any> {\n\n    return new Observable<any>((observer) => {\n      window && window.geofence && (window.geofence.onNotificationClicked = observer.next.bind(observer));\n      return () => window.geofence.onNotificationClicked = () => { };\n    });\n\n  }\n\n}\n"]}